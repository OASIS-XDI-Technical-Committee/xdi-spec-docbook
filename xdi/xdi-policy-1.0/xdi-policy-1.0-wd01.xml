<?xml version="1.0" encoding="UTF-8"?>
<!-- 
For use when a committee document points at the OASIS web site for publishing:
<?xml-stylesheet type="text/xsl" 
href="http://docs.oasis-open.org/templates/DocBook/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" 

For use when a committee document points to an embedded runtime installation:
<?xml-stylesheet type="text/xsl" 
         href="htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
        "htmlruntime/spec-0.6/docbook/docbookx.dtd" 

For use when a committee document is published in a local environment only
(note the instructions for local publishing require adjusting the stylesheet
 and DocBook directories in these declarations):
<?xml-stylesheet type="text/xsl" 
href="file:///c:/oasis/spec-0.6/stylesheets/oasis-specification-html-offline.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "file:///c:/oasis/spec-0.6/docbook/docbookx.dtd" 
-->
<?xml-stylesheet type="text/xsl" 
         href="../../htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
        "../../htmlruntime/spec-0.6/docbook/docbookx.dtd" 
[
<!--the document properties-->
<!ENTITY name "xdi-policy">
<!ENTITY pversion "0.1">
<!ENTITY version "1.0">
<!ENTITY stage "wd01">
<!ENTITY standard "Working Draft 01">
<!ENTITY this-loc "http://docs.oasis-open.org/xdi/spec-&version;">
<!ENTITY previous-loc "http://docs.oasis-open.org/xdi/spec-&pversion;">
<!ENTITY latest-loc "http://docs.oasis-open.org/xdi/spec">
<!ENTITY pubdate "(not published)">
<!ENTITY title "XDI Policy V&version;">
]>

<article status="&standard;">

<articleinfo>

<title>&title;</title>
<productname>&name;</productname>
<productnumber>&version;-&stage;</productnumber>
<releaseinfo role="track">Standards Track Work Product</releaseinfo>
<releaseinfo role="OASIS-specification-this-authoritative">&this-loc;/&name;-&version;-&stage;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.html</releaseinfo>
<releaseinfo role="OASIS-specification-previous-authoritative">&previous-loc;/&name;-&pversion;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.html</releaseinfo>
<releaseinfo role="OASIS-specification-latest-authoritative">&latest-loc;/&name;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.html</releaseinfo>
<releaseinfo role="committee"><ulink url="http://www.oasis-open.org/committees/xdi">OASIS XDI TC</ulink></releaseinfo>
<authorgroup>
  <editor> <firstname>Dan</firstname><surname>Blum</surname>
    <affiliation><orgname>Respect Network</orgname></affiliation>
    <email>dan.blum@respect.network</email> </editor>
</authorgroup>
<pubdate>&pubdate;</pubdate>
<copyright><year>2015</year>
<holder>OASIS Open, Inc. All Rights Reserved.</holder></copyright>
 <legalnotice role="additional"><title>Additional artifacts</title>
 <para>This prose specification is one component of a Work Product which also includes:</para>
 <!--itemizedlist spacing="compact"> <listitem><para>
publishing materials: <ulink url="&this-loc;/&name;-&version;-&stage;.zip">&this-loc;/&name;-&version;-&stage;.zip</ulink></para>
 </listitem> </itemizedlist-->
</legalnotice>
<legalnotice role="related"><title>Related work</title>
  <para>This document is primarily based on a set of proposals that had been collected by the OASIS XDI TC on its associated wiki at <ulink url="https://wiki.oasis-open.org/xdi/">https://wiki.oasis-open.org/xdi/</ulink>.</para>
</legalnotice>

<abstract><title>Abstract</title>
  <para>This working draft is for reviewer comment only and is not yet a standards document or published at OASIS. This specification defines the standard structure and vocabulary of XDI authorization statements, including XDI link contracts and policy expressions, so they are portable across all XDI endpoints.</para>
</abstract>

<legalnotice role="citation"><title>Citation format</title>
<para>When referencing this specification the following citation format should be used:</para>
<bibliolist> <bibliomixed>
  <abbrev>OASIS-XDI-Policy-V1.0</abbrev>
  <title>OASIS XDI Policy V1.0</title>
  <date>&pubdate;. </date>
  <releaseinfo>OASIS &standard;. </releaseinfo>
  <citetitle><ulink url="&latest-loc;/&name;.html">&latest-loc;/&name;.html</ulink>.</citetitle>
</bibliomixed> </bibliolist>
</legalnotice>
<legalnotice role="notices"><title>Notices</title>
<para>Copyright &#169; OASIS&#174; Open 2015. All Rights Reserved.  </para>
<para>All capitalized terms in the following text have the meanings assigned to them in the OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full Policy may be found at <ulink  url="http://www.oasis-open.org/who/intellectualproperty.php">http://www.oasis-open.org/who/intellectualproperty.php</ulink>.</para>
<para>This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to OASIS, except as needed for the purpose of developing any document or deliverable produced by an OASIS Technical Committee (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy, must be followed) or as required to translate it into languages other than English.</para> 
<para>The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.</para>
<para>This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para> 
<para>OASIS requests that any OASIS Party or any other party that believes it has patent claims that would necessarily be infringed by implementations of this OASIS Committee Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>
<para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim of ownership of any patent claims that would necessarily be infringed by implementations of this specification by a patent holder that is not willing to provide a license to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification. OASIS may include such claims on its website, but disclaims any obligation to do so.</para>
<para>OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS' procedures with respect to rights in any document or deliverable produced by an OASIS Technical Committee can be found on the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this OASIS Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator. OASIS makes no representation that any information or list of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential Claims.</para>
<para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>, the owner and developer of this specification, and should be used only to refer to the organization and its official outputs. OASIS welcomes reference to, and implementation and use of, specifications, while reserving the right to enforce its marks against misleading uses. Please see <ulink url="http://www.oasis-open.org/who/trademark.php">http://www.oasis-open.org/who/trademark.php</ulink> for above guidance.</para>
</legalnotice>

</articleinfo>

<section id="s.introduction"><title>Introduction</title>

  <para>This specification defines the standard structure and vocabulary of XDI authorization statements, including XDI link contracts and policy expressions, so they are portable across all XDI endpoints.</para>
  <para>This builds on the basic XDI graph model (see <xref linkend="xdi-core-1.0"/>) and on XDI Messaging (see <xref linkend="xdi-messaging-1.0"/>).</para>

  <section><title> Key words</title>

    <para>The key words <glossterm>must</glossterm>, <glossterm>must not</glossterm>, <glossterm>required</glossterm>,
      <glossterm>shall</glossterm>, <glossterm>shall not</glossterm>, <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
      <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and <glossterm>optional</glossterm> are to be
      interpreted as described in <xref linkend="rfc2119"/>. Note that for reasons of style, these words are not capitalized in this
      document.</para>

  </section>
  
  <section><title>Normative References</title>

    <bibliolist> <bibliomixed id="xdi-core-1.0">
      <abbrev>OASIS-XDI-Core-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-core-1.0/xdi-core-1.0-wd01.xml">OASIS XDI 1.0 Core Specification</ulink></title>
      <author><firstname>Joseph </firstname> <surname>Boyle</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>. 
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-core.html">&latest-loc;/xdi-core.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-discovery-1.0">
      <abbrev>OASIS-XDI-Discovery-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-discovery-1.0/xdi-discovery-1.0-wd01.xml">OASIS XDI 1.0 Discovery Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-discovery.html">&latest-loc;/xdi-discovery.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-bindings-1.0">
      <abbrev>OASIS-XDI-Bindings-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-bindings-1.0/xdi-bindings-1.0-wd01.xml">OASIS XDI 1.0 Bindings Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-bindings.html">&latest-loc;/xdi-bindings.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-security-mechanisms-1.0">
      <abbrev>OASIS-XDI-Security-Mechanisms-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-security-mechanisms-1.0/xdi-security-mechanisms-1.0-wd01.xml">OASIS XDI 1.0 Security Mechanisms Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-security-mechanisms.html">&latest-loc;/xdi-security-mechanisms.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-privacy-mechanisms-1.0">
      <abbrev>OASIS-XDI-Privacy-Mechanisms-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-privacy-mechanisms-1.0/xdi-privacy-mechanisms-1.0-wd01.xml">OASIS XDI 1.0 Privacy Mechanisms Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-privacy-mechanisms.html">&latest-loc;/xdi-privacy.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="rfc2119">
      <abbrev>RFC 2119</abbrev><date>March 1997</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc2119.txt">Key words for use in RFCs to Indicate Requirement Levels</ulink></title>
      <author><firstname>S. </firstname> <surname>Bradner</surname></author>. 
      <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed> <bibliomixed id="rfc6749">
      <abbrev>RFC 6749</abbrev><date>October 2012</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc6749.txt">The OAuth 2.0 Authorization Framework</ulink></title>
      <author><firstname>D. </firstname> <surname>Hardt </surname></author>, 
       <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed> <bibliomixed id="rfc6750">
      <abbrev>RFC 6750</abbrev><date>October 2012</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc6750.txt">The OAuth 2.0 Authorization Framework: Bearer Token Usage</ulink></title>
      <author><firstname>M. </firstname> <surname>Jones</surname></author>. 
      <author><firstname>D. </firstname> <surname>Hardt</surname></author>, 
      <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed>
  </bibliolist>

</section>

<section><title>Non-Normative References</title>

  <bibliolist>
  </bibliolist>

</section>

</section>

<section><title>XDI Policy</title>

<para>To meet the security and privacy requirements of XDI-based systems acting for different authorities,
the XDI protocol enables systems to precisely describe access and usage rights to the data they control.
In order for these rights to be enforced uniformly by the all XDI authorities to which they are granted,
XDI authorization is described in XDI itself. This includes the ability to express any policy governing
authorization and for policies to reference data, variables, relations, and other statements in the
relevant XDI graphs. XDI’s primary policy building blocks are a protocol for message operations, a policy
expression syntax (using Boolean constructs) and the link contract. The link contract is an access control
mechanism designed to work equally well in either a centralized, or distributed (peer to peer) model.</para>

</section>

<section><title>Terminology</title>

<para><firstterm>XDI policy: </firstterm>The rules and practices by which XDI authorities protect information graphs from unauthorized access operations, or unauthorized usage. </para>
<para><firstterm>Authorizing authority (AA): </firstterm>The entity or organization controlling an XDI graph to which it may authorize access.</para>
<para><firstterm>Requesting authority (RA): </firstterm>An entity or organization requesting access to an AA’s graph.</para>
<para><firstterm>Operational policies: </firstterm>Control access to the graph. They can be specified in XDI link contracts or XDI messages and optionally make use of conditional policy expressions.</para>
<para><firstterm>Usage policies: </firstterm>Specify RA’s permissions to use data from the AA’s graph once the data is accessed. In many cases the obligation to honor a usage policy must be specified in a legal (or other) agreement for it to be effective. </para>
<para><firstterm>Conditional policy expressions: </firstterm>Boolean reserved words and patterns for use in XDI policies. </para>
<para><firstterm>Other policy variables: </firstterm>Time and other variables may be used in policy expressions.</para>
<para><firstterm>XDI message: </firstterm>An XDI subgraph exchanged between XDI authorities to accomplish an XDI operation ($get, $set, $del)
against information in a target graph.</para>
<para><firstterm>Link contract: </firstterm>An XDI subgraph used for access control, or authorization between an AA and an RA. It is a machine-readable agreement describing data shared and permissions granted by one XDI authority to another. A link contract describes both the policy that must be satisfied by an XDI message to be accepted and the permissions granted to the RA if those conditions are met. Link contracts may be used to apply and enforce any type of policy over shared data and messages, including security, privacy, re-sharing, synchronization, and termination.</para>

</section>

<section><title>Policy Model</title>

<para>By default, no one has access to data in an XDI graph unless access is granted through a link contract.
An XDI authority SHOULD create a root link contract to express its access rights to its whole graph. If parts
of the graph are to be shared publicly with external services, the controlling authority SHOULD create a
public link contract allowing anonymous access to them. If parts of the graph are to be shared with other
authorities, the controlling authority can create generic or specific link contract instances for them
through link contract instantiation exchanges.</para>

<para>Thus, link contracts may be set at various contexts of a graph. In general, a link contract specifically
addresses the subject nodes. However, the public link contract and root link contract address an entire graph.</para>

<para>All access to the graph other than by its controlling authority’s software occurs via XDI messages. XDI
messages may be submitted to the graph for policy evaluation through local APIs or over a network interface.</para>

<para>An XDI graph may be controlled by one authority yet contain sub-graphs that are controlled by other
authorities. These sub-graphs are expressed as inner roots to mark them clearly as originating from another
authority. When the two authorities choose to cooperate, the authority containing the subgraph should respect
the originating authority’s link contracts.</para>

</section>

<section><title>Policy Evaluation</title>

<para><firstterm>XDI operational policies</firstterm> are expressed in XDI link contracts or XDI messages and may be evaluated
against an evaluation context. The result is always a boolean value (true or false).  Two elements are
needed to set the evaluation context:</para>

<orderedlist>
<listitem><para>The XDI graph that is the target of an XDI message (called the <glossterm>target graph</glossterm>).</para></listitem>
<listitem><para>The XDI message that is meant to be executed against the target graph (called the <glossterm>input message</glossterm>).</para></listitem>
</orderedlist>

<para>An XDI link contract policy is part of the target graph. It provides a way for an XDI endpoint to
determine if the input message is authorized. An XDI message policy is part of the input message. It
provides a way for an XDI client to request execution of the input message only if certain conditions
are met. XDI link contract policies and XDI message policies are evaluated by the XDI endpoint that hosts
the target graph and receives the input message.</para>

<para>An <glossterm>XDI data usage policy</glossterm> controls usage of the requested data outside the scope
of XDI enforcement. Data usage policies are attached to a link contract controlling access to part of the
target graph. XDI data usage policies are evaluated by the authority that holds the data to which the XDI
data usage policy applies. This may be the XDI endpoint that hosts the target graph, or it may be any other
XDI endpoint or XDI client which has retrieved the data (and the XDI data usage policy along with it).</para>

<para>Note: More work on data usage policies may come in the future, including the possibility of attaching
them to the data itself rather than the link contract. Usage policies are supported in this working draft
primarily as a basic privacy mechanism to prevent undesired copying of data when RAs and AAs are part of a
trust framework supporting these policies.</para>

</section>

<section><title>Policy Expression Requirements</title>

<para>Policy expressions MUST follow the patterns and include applicable reserved words as specified below.</para>

<section><title>Policy Expression Pattern</title>

<para>A policy MUST consist of one or more XDI statements in the following pattern: </para>

<programlisting>&lt;--policy-context--> $if&lt;--boolean-context-->/&lt;--operator-->/&lt;--condition-->
</programlisting>

<para>Where:</para>

<orderedlist>
<listitem><para><code>&lt;--policy-context--></code> is the context of the policy expression, e.g. an XDI link contract or an XDI message.</para></listitem>
<listitem><para><code>&lt;--boolean-context--></code> is an optional hierarchy of subcontexts expressing the XDI boolean operators (<code>$and</code>, <code>$or</code>, <code>$not</code>) needed to produce a boolean logic tree for policy evaluation (see below).</para></listitem>
<listitem><para><code>&lt;--operator--></code> is either a boolean operator (<code>$true</code>, <code>$false</code>), or an XDI operation being requested by a message (e.g., <code>$get</code>, <code>$set</code>, <code>$del</code>, <code>$do&lt;--extension--></code>).</para></listitem>
<listitem><para><code>&lt;--condition--></code> is either a comparison condition (<code>$is</code>, <code>$equals</code>, <code>$matches</code>, <code>$greater</code>, <code>$lesser</code>), or an arbitrary XDI statement.</para></listitem>
</orderedlist>

</section>

<section><title>Conditional Operations Policy Expression Dictionary Requirements</title>

<para>The following reserved words are proposed for operations policy expression.</para>

<section><title><code>$if</code> Policy Context</title>

<itemizedlist>
<listitem><para><code>$if</code> defines the root context node of a policy expression subgraph.</para></listitem>
<listitem><para><code>$if</code> MUST be a child context of a $do context (the root context of an XDI link contract or the operation context of an XDI message).</para></listitem>
<listitem><para><code>$if</code> MUST be an entity singleton.</para></listitem>
<listitem><para><code>$if</code> MAY have zero or more boolean subcontexts.</para></listitem>
<listitem><para><code>$if</code> MAY have zero or more operator predicates.</para></listitem>
<listitem><para><code>$if</code> evaluates to true, if</para></listitem>
<listitem><para>ANY of its boolean subcontexts evaluate to true, OR</para></listitem>
<listitem><para>ANY of its operator predicates evaluate to true.</para></listitem>
<listitem><para><code>$if</code> evaluates to false, if it has neither boolean subcontexts nor operator predicates.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$and</code> Boolean Context</title>

<itemizedlist>
<listitem><para><code>$and</code> is the boolean context expressing logical conjunction.</para></listitem>
<listitem><para><code>$and</code> MAY be an entity singleton for a single logical conjunction.</para></listitem>
<listitem><para><code>$and</code> MUST be an entity collection if there are multiple logical conjunctions that must be evaluated independently.</para></listitem>
<listitem><para><code>$and</code> MAY have zero or more boolean subcontexts.</para></listitem>
<listitem><para><code>$and</code> MAY have zero or more operator predicates.</para></listitem>
<listitem><para><code>$and</code> evaluates to true, if</para></listitem>
<listitem><para>ALL of its boolean subcontexts evaluate to true, AND</para></listitem>
<listitem><para>ALL of its operator predicates evaluate to true</para></listitem>
<listitem><para><code>$and</code> evaluates to true, if it has neither boolean subcontexts nor operator predicates.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$or</code> Boolean Context</title>

<itemizedlist>
<listitem><para><code>$or</code> is the boolean context defining logical disjunction.</para></listitem>
<listitem><para><code>$or</code> MAY be an entity singleton for a single logical disjunction.</para></listitem>
<listitem><para><code>$or</code> MUST be an entity collection if there are multiple logical disjunctions that must be evaluated independently.</para></listitem>
<listitem><para><code>$or</code> MAY have zero or more boolean subcontexts.</para></listitem>
<listitem><para><code>$or</code> MAY have zero or more operator predicates.</para></listitem>
<listitem><para><code>$or</code> evaluates to true, if</para></listitem>
<listitem><para>ANY of its boolean subcontexts evaluate to true, OR</para></listitem>
<listitem><para>ANY of its operator predicates evaluate to true.</para></listitem>
<listitem><para><code>$or</code> evaluates to false, if it has neither boolean subcontexts nor operator predicates.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$not</code> Boolean Context</title>

<itemizedlist>
<listitem><para><code>$not</code> is the boolean context defining logical negation.</para></listitem>
<listitem><para><code>$not</code> MAY be an entity singleton for a single logical negation.</para></listitem>
<listitem><para><code>$not</code> MUST be an entity collection if there are multiple logical negations that must be evaluated independently.</para></listitem>
<listitem><para><code>$not</code> MUST either have exactly one boolean subcontext, OR have exactly one operator predicate.</para></listitem>
<listitem><para><code>$not</code> evaluates to true, if</para></listitem>
<listitem><para>its single boolean subcontext evaluates to false, OR</para></listitem>
<listitem><para>its single operator predicate evaluates to false.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$true</code> Operator</title>

<itemizedlist>
<listitem><para><code>$true</code> is the boolean operator expressing that a condition statement MUST be true.</para></listitem>
<listitem><para><code>$true</code> evaluates to true, if</para></listitem>
<listitem><para>its condition evaluates to true.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$false</code> Operator</title>

<itemizedlist>
<listitem><para><code>$false</code> is the boolean operator expressing that a condition statement MUST be false.</para></listitem>
<listitem><para><code>$false</code> evaluates to true, if</para></listitem>
<listitem><para>its condition evaluates to false.</para></listitem>
</itemizedlist>

</section>

<section><title>Generic Operator</title>

<itemizedlist>
<listitem><para>If an operator is used that does not correspond to any of boolean operators (<code>$true</code>, <code>$false</code>), it is considered to be an XDI operation (e.g., <code>$get</code>, <code>$set</code>, <code>$del</code>, <code>$do&lt;--extension--></code>).</para></listitem>
<listitem><para>The XDI operation evaluates to true, if</para></listitem>
<listitem><para>it exists in the input message.</para></listitem>
</itemizedlist>

</section>

<section><title><code>{$from}</code> Variable</title>

<itemizedlist>
<listitem><para><code>{$from}</code> is a global XDI variable representing the sender of the input message (see <code>&lt;--from--></code> in the XdiMessagePatterns proposal).</para></listitem>
<listitem><para><code>{$from}</code> MUST be replaced by the XDI address of the sender of the input message before the condition is evaluated.</para></listitem>
</itemizedlist>

</section>

<section><title><code>{$msg}</code> Variable</title>

<itemizedlist>
<listitem><para><code>{$msg}</code> is a global XDI variable representing the global context of the input message (see <code>&lt;--from-->[$msg]!&lt;--id--></code> in the XdiMessagePatterns proposal).</para></listitem>
<listitem><para><code>{$msg}</code> MUST be replaced by the XDI address of the input message before the condition is evaluated.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$is</code> Condition</title>

<itemizedlist>
<listitem><para><code>$is</code> expresses that the subject and object nodes of the condition represent the same logical entity (see the EquivalenceLinks proposal).</para></listitem>
<listitem><para><code>$is</code> evaluates to true, if</para></listitem>
<listitem><para>the subject node and object node of the condition represent the same logical entity.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$equals</code> Condition</title>

<itemizedlist>
<listitem><para><code>$equals</code> expresses that the subject and object nodes of the condition have the same literal values.</para></listitem>
<listitem><para><code>$equals</code> evaluates to true, if</para></listitem>
<listitem><para>both the subject node and object node of the condition identify an XDI literal, AND</para></listitem>
<listitem><para>the literal values are equivalent.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$matches</code> Condition</title>

<itemizedlist>
<listitem><para><code>$matches</code> expresses that the literal value of the subject node of the condition matches the regular expression specified in the literal value of the object node of the condition. [TODO: define which regular expression syntax to use]</para></listitem>
<listitem><para><code>$matches</code> evaluates to true, if</para></listitem>
<listitem><para>both the subject node and object node of the condition identify an XDI literal, AND</para></listitem>
<listitem><para>the literal value of the subject node of the condition matches the regular expression specified in the literal value of the object node of the condition.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$greater</code> Condition</title>

<itemizedlist>
<listitem><para><code>$greater</code> expresses that the literal value of the subject node of the condition must be greater than the literal value of the object node of the condition.</para></listitem>
<listitem><para><code>$greater</code> evaluates to true, if</para></listitem>
<listitem><para>both the subject node and object node of the condition identify an XDI literal, AND</para></listitem>
<listitem><para>both literal values are numerical, AND</para></listitem>
<listitem><para>the numerical literal value of the subject node is greater than the numerical literal value of the object node.</para></listitem>
</itemizedlist>

</section>

<section><title><code>$lesser</code> Condition</title>

<itemizedlist>
<listitem><para><code>$lesser</code> expresses that the literal value of the subject node of the condition must be lesser than the literal value of the object node of the condition.</para></listitem>
<listitem><para><code>$lesser</code> evaluates to true, if</para></listitem>
<listitem><para>both the subject node and object node of the condition identify an XDI literal, AND</para></listitem>
<listitem><para>both literal values are numerical, AND</para></listitem>
<listitem><para>the numerical literal value of the subject node is lesser than the numerical literal value of the object node.</para></listitem>
</itemizedlist>

</section>

<section><title>Statement Condition</title>

<itemizedlist>
<listitem><para>If a condition is used that does not correspond to any of comparison conditions (<code>$is</code>, <code>$equals</code>, <code>$greater</code>, <code>$lesser</code>), it is considered to be an arbitrary XDI statement.</para></listitem>
<listitem><para>The XDI statement evaluates to true, if</para></listitem>
<listitem><para>it exists in the target graph.</para></listitem>
</itemizedlist>

</section>

</section>

<section><title>Usage Permissions Policy Expression Dictionary Requirements</title>

<para>The following reserved words are proposed for usage policy expression, also called usage permissions.</para>
<para>See the example section for the use of the $for branch within a detailed link contract instantiation scenario.</para>

<section><title><code>$for</code></title>

<para>Included within a link contract instance to specify the context of usage. Uses the $opt, $required, $default and other reserved words.  The $for pattern makes use of $opt and other patterns.</para>

</section>

<section><title><code>$opt</code></title>

<para>Included within a $for subgraph support the opt-in process associated with a link contract giving a requesting authority access to data.</para>

</section>

<section><title><code>$required</code></title>

<para>Provides a mechanism within $opt for the requesting authority to declared whether a requested data item is optional or required. Note that a request for a link contract granting access to data may contain multiple elements, some optional and some required for the operation to succeed.</para>

</section>

<section><title><code>$default</code></title>

<para>Specifies whether the usage permission is $true or $false by default (e.g. opt-in or opt-out).</para>

</section>

</section>

</section>

<section><title>Link Contracts</title>

<para>Per the XDI policy model, all access to graphs is controlled through link contracts. Some
of these are general link contracts – such as the root link contract and the public link
contract – to set default policies over a broad graph context. Other link contracts enable
relationships with specific external authorities (such as an individual person) or generic types
of authorities (such as “all customers” or “all friends”).</para>

<para>Link contracts reflecting relationships among authorities are created through a link
contract (LC) instantiation process. The LC instantiation process makes use of link contract
templates, requester link contracts and link contract instances, and is described in the XDI
connections specification.</para>

<section><title>Link Contract Initiation Participants</title>

<para>The parties to the instantiation of a link contract are:</para>

<orderedlist>
<listitem><para><glossterm>Authorizing Authority (AA): </glossterm>the XDI authority authorizing a link contract granting permissions to an XDI graph.</para></listitem>
<listitem><para><glossterm>Requesting Authority (RA): </glossterm>the XDI authority requesting a link contract to obtain permissions to an XDI graph.</para></listitem>
<listitem><para><glossterm>XDI Community Authority (XCA): </glossterm>the XDI authority for a community link contract.</para></listitem>
<listitem><para><glossterm>Template authority (TA): </glossterm>the XDI authority publishing a link contract template, which may or may not be the requesting authority or authorizing authority.</para></listitem>
</orderedlist>

</section>

<section><title>Link Contract Pattern Types</title>

<para>There are four core link contract patterns used for different stages of defining an XDI
authorization relationship.</para>

<orderedlist>
<listitem><para>A <glossterm>link contract template</glossterm> is a link contract containing XDI variables that must be replaced by the authorizing authority in order to create a valid link contract instance. A link contract template may be published by any XDI authority, not just a requesting or authorizing authority. Templates provided by neutral third parties make it much easier for link contracts to be standardized, promoting interoperability of XDI vocabulary and permissions. Note: Separating the RA and TA function has not been specified in detailed examples in this working draft or tested in implementation by TC members.</para></listitem>
<listitem><para>A <glossterm>link contract instance</glossterm> is produced by replacing the variables in a link contract template.</para></listitem>
<listitem><para>A <glossterm>community link contract</glossterm> is an AA link contract used to authorize a link contract instantiation request ({$do} message) from an RA. A community contract does for an AA what a requestor contract does for an RA. A community contract allows the members of a community (of any size) to establish a common policy or set of policies that will govern members of the community accepting new link contracts from each other. A simple community contract can prevent link contract requests from being used as a form of spam. The policy for this could be as simple as requiring a link contract request to come from another member of that community. A community link contract address is not derived algorithmically from a link contract template address. Rather, it is simply a well-known XDI address to all members of that community.</para></listitem>
<listitem><para>A <glossterm>requester link contract</glossterm> is a special link contract used by a requesting authority to govern acceptance of link contract instances conforming to a specific link contract template. The requester link contract expresses the policies enforced by a specific requesting authority for accepting LC instances in its own graph. The address of a requester link contract is algorithmically derived from the address of the link contract template on which it is based, providing a standard way to authorize acceptance of link contract instances based on a known template. The requester link contract also provides a way for the AA to update an LC instance repeatedly as needed, or to delete the instance in the RA’s graph.</para></listitem>
</orderedlist>

</section>

<section><title>Link Contract Pattern Definition</title>

<para>The following is a high-level summary of the three link contract pattern types.</para>

<section><title>Singleton Patterns</title>

<para>Community Contract Pattern:</para>

<programlisting>(&lt;--AA-->/&lt;--XCA-->)(&lt;--XCA-->#&lt;--C-ID-->$do
</programlisting>

or

<programlisting>(&lt;--AA-->/&lt;--XCA-->)(&lt;--XCA-->#&lt;--C-ID-->$do$if/&lt;--policy-expression-->
</programlisting>

<para>Template Pattern:</para>

<programlisting>&lt;--TA-->&lt;--ID-->{$do}/&lt;--operation-->/{$to}&lt;--object-graph-->
</programlisting>

<para>Requester Pattern:</para>

<programlisting>(&lt;--RA-->/&lt;--TA-->&lt;--ID-->{$do})$do/$set{$do}/({$to}/&lt;--RA-->)&lt;--TA-->&lt;--ID-->$do
</programlisting>

<para>Specific Instance:</para>

<programlisting>(&lt;--AA-->/&lt;--RA-->)&lt;--TA-->&lt;--ID-->$do/&lt;--operation-->/&lt;--AA-->&lt;--object-graph-->
</programlisting>

<para>Generic Instance:</para>

<programlisting>(&lt;--AA-->/&lt;--class-->)&lt;--TA-->&lt;--ID-->$do/&lt;--operation-->/&lt;--AA-->/&lt;--class-->&lt;--AA-->&lt;--object-graph-->
</programlisting>

</section>

<section><title>Collection Patterns</title>

<para>Template Pattern:</para>

<programlisting>&lt;--TA-->&lt;--ID-->{$do}!&lt;--member-id-->&lt;--operation-->/{$to}&lt;--object-graph-->
</programlisting>

<para>Requester Pattern:</para>

<programlisting>TBD
</programlisting>

<para>Specific Instance:</para>

<programlisting>(&lt;--AA-->/&lt;--RA-->)&lt;--TA-->&lt;--ID-->[$do]!&lt;--member-id-->/&lt;--operation-->/&lt;--AA-->&lt;--object-graph-->
</programlisting>

<para>Generic Instance:</para>

<programlisting>(&lt;--AA-->/&lt;--class-->)&lt;--TA-->&lt;--ID-->[$do]!&lt;--member-id-->/&lt;--operation-->/(&lt;--AA-->/&lt;--class-->)&lt;--AA-->&lt;--object-graph-->
</programlisting>

<para>Where:</para>

<itemizedlist>
<listitem><para>&lt;--TA--> is the XDI address of the template authority.</para></listitem>
<listitem><para>&lt;--RA--> is the XDI address of the requesting authority.</para></listitem>
<listitem><para>&lt;--AA--> is the XDI address of the authorizing authority.</para></listitem>
<listitem><para>&lt;--ID--> is an OPTIONAL context for specialization of the singleton <code>$do</code> or collection <code>[$do]&lt;--member-id--></code>. It can serve as a "qualifier" or "tag" that describes the intention of the link contract, e.g. #registration.</para></listitem>
<listitem><para>&lt;--member-id--> is a unique immutable ID for a member of a link contract collection. (Unordered members start with <code>!</code>, ordered members start with <code>@</code>.)</para></listitem>
<listitem><para>&lt;--operation--> is an XDI operation permitted by this link contract (e.g., <code>$get</code>, <code>$set</code>, <code>$del</code>, <code>$copy</code>, <code>$move</code>, or <code>$do&lt;--extension--></code>).</para></listitem>
<listitem><para>&lt;--object-graph--> is the XDI graph that is the object of the operations permitted by the link contract.</para></listitem>
<listitem><para>&lt;--boolean-context--> is defined in the Policy Expression Requirements.</para></listitem>
<listitem><para>&lt;--operator--> is defined in the Policy Expression Requirements.</para></listitem>
<listitem><para>&lt;--condition--> is defined in the Policy Expression Requirements.</para></listitem>
</itemizedlist>

Notes about this overall architecture:
1. The only difference between the singleton and collection patterns is whether the link contract node itself is an XDI entity singleton or entity collection.
2. Both the instance and the requester patterns begin with an inner root so that they can have an algorithmically-generated address relative to an AA and RR that is always identical in both authorities’ graphs. `The template and the requester contain an XDI {$to} variable to refer to AA variables outside of the policy expression branch. The instance pattern does not include XDI variables because they have been instantiated in order to create the instance.
3. In the instance pattern, each of the three components specializes the associated $word that follows it, i.e.:
1. &lt;--authorizing-authority--> specializes $to.
2. &lt;--requesting-authority--> specializes $from.
3. &lt;--template-authority-->&lt;--template-id--> specializes $do.


</section>

</article>
