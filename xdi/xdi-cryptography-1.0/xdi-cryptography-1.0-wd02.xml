<?xml version="1.0" encoding="UTF-8"?>
<!-- 
For use when a committee document points at the OASIS web site for publishing:
<?xml-stylesheet type="text/xsl" 
href="http://docs.oasis-open.org/templates/DocBook/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" 

For use when a committee document points to an embedded runtime installation:
<?xml-stylesheet type="text/xsl" 
         href="htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
        "htmlruntime/spec-0.6/docbook/docbookx.dtd" 

For use when a committee document is published in a local environment only
(note the instructions for local publishing require adjusting the stylesheet
 and DocBook directories in these declarations):
<?xml-stylesheet type="text/xsl" 
href="file:///c:/oasis/spec-0.6/stylesheets/oasis-specification-html-offline.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "file:///c:/oasis/spec-0.6/docbook/docbookx.dtd" 
-->
<?xml-stylesheet type="text/xsl" 
         href="../../htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
        "../../htmlruntime/spec-0.6/docbook/docbookx.dtd" 
[
<!--the document properties-->
<!ENTITY name "xdi-cryptography">
<!ENTITY pversion "0.1">
<!ENTITY version "1.0">
<!ENTITY stage "wd02">
<!ENTITY standard "Working Draft 02">
<!ENTITY this-loc "http://docs.oasis-open.org/xdi/spec-&version;">
<!ENTITY previous-loc "http://docs.oasis-open.org/xdi/spec-&pversion;">
<!ENTITY latest-loc "http://docs.oasis-open.org/xdi/spec">
<!ENTITY pubdate "(not published)">
<!ENTITY title "XDI Cryptography V&version;">
]>

<article status="&standard;">

<articleinfo>

<title>&title;</title>
<productname>&name;</productname>
<productnumber>&version;-&stage;</productnumber>
<releaseinfo role="track">Standards Track Work Product</releaseinfo>
<releaseinfo role="OASIS-specification-this-authoritative">&this-loc;/&name;-&version;-&stage;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.html</releaseinfo>
<releaseinfo role="OASIS-specification-previous-authoritative">&previous-loc;/&name;-&pversion;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.html</releaseinfo>
<releaseinfo role="OASIS-specification-latest-authoritative">&latest-loc;/&name;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.html</releaseinfo>
<releaseinfo role="committee"><ulink url="http://www.oasis-open.org/committees/xdi">OASIS XDI TC</ulink></releaseinfo>
<authorgroup>
  <editor> <firstname>Markus</firstname><surname>Sabadello</surname>
    <affiliation><orgname>Danube Tech</orgname></affiliation>
    <email>markus@danubetech.com</email> </editor>
  <editor> <firstname>Peter</firstname><surname>Davis</surname>
    <affiliation><orgname>Neustar, Inc.</orgname></affiliation>
    <email>peter.davis@neustar.biz</email> </editor>
</authorgroup>
<pubdate>&pubdate;</pubdate>
<copyright><year>2016</year>
<holder>OASIS Open, Inc. All Rights Reserved.</holder></copyright>
 <legalnotice role="additional"><title>Additional artifacts</title>
 <para>This prose specification is one component of a Work Product which also includes:</para>
 <!--itemizedlist spacing="compact"> <listitem><para>
publishing materials: <ulink url="&this-loc;/&name;-&version;-&stage;.zip">&this-loc;/&name;-&version;-&stage;.zip</ulink></para>
 </listitem> </itemizedlist-->
</legalnotice>
<legalnotice role="related"><title>Related work</title>
  <para>This document is primarily based on a set of proposals that had been collected by the OASIS XDI TC on its associated wiki at <ulink url="https://wiki.oasis-open.org/xdi/">https://wiki.oasis-open.org/xdi/</ulink>.</para>
</legalnotice>

<abstract><title>Abstract</title>
  <para>This working draft is for reviewer comment only and is not yet a standards document or published at OASIS. This specification defines the standard structure and vocabulary of XDI cryptographic concepts and operations, including key pairs, keys, tokens, digests, signatures, and encryption.</para>
</abstract>

<legalnotice role="citation"><title>Citation format</title>
<para>When referencing this specification the following citation format should be used:</para>
<bibliolist> <bibliomixed>
  <abbrev>OASIS-XDI-Cryptography-V1.0</abbrev>
  <title>OASIS XDI Cryptography V1.0</title>
  <date>&pubdate;. </date>
  <releaseinfo>OASIS &standard;. </releaseinfo>
  <citetitle><ulink url="&latest-loc;/&name;.html">&latest-loc;/&name;.html</ulink>.</citetitle>
</bibliomixed> </bibliolist>
</legalnotice>
<legalnotice role="notices"><title>Notices</title>
<para>Copyright &#169; OASIS&#174; Open 2016. All Rights Reserved.  </para>
<para>All capitalized terms in the following text have the meanings assigned to them in the OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full Policy may be found at <ulink  url="http://www.oasis-open.org/who/intellectualproperty.php">http://www.oasis-open.org/who/intellectualproperty.php</ulink>.</para>
<para>This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to OASIS, except as needed for the purpose of developing any document or deliverable produced by an OASIS Technical Committee (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy, must be followed) or as required to translate it into languages other than English.</para> 
<para>The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.</para>
<para>This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para> 
<para>OASIS requests that any OASIS Party or any other party that believes it has patent claims that would necessarily be infringed by implementations of this OASIS Committee Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>
<para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim of ownership of any patent claims that would necessarily be infringed by implementations of this specification by a patent holder that is not willing to provide a license to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification. OASIS may include such claims on its website, but disclaims any obligation to do so.</para>
<para>OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS' procedures with respect to rights in any document or deliverable produced by an OASIS Technical Committee can be found on the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this OASIS Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator. OASIS makes no representation that any information or list of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential Claims.</para>
<para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>, the owner and developer of this specification, and should be used only to refer to the organization and its official outputs. OASIS welcomes reference to, and implementation and use of, specifications, while reserving the right to enforce its marks against misleading uses. Please see <ulink url="http://www.oasis-open.org/who/trademark.php">http://www.oasis-open.org/who/trademark.php</ulink> for above guidance.</para>
</legalnotice>

</articleinfo>

<section id="s.introduction"><title>Introduction</title>

  <para>This specification defines the standard structure and vocabulary of XDI cryptographic concepts 
  and operations, including key pairs, keys, tokens, digests, signatures, and encryption.</para>
  <para>This builds on the basic XDI graph model (see <xref linkend="xdi-core-1.0"/>) and is used
  in XDI Messaging (see <xref linkend="xdi-messaging-1.0"/>) and XDI Link Contracts
  (see <xref linkend="xdi-link-contracts-1.0"/>).</para>

  <section><title> Key words</title>

    <para>The key words <glossterm>must</glossterm>, <glossterm>must not</glossterm>, <glossterm>required</glossterm>,
      <glossterm>shall</glossterm>, <glossterm>shall not</glossterm>, <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
      <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and <glossterm>optional</glossterm> are to be
      interpreted as described in <xref linkend="rfc2119"/>. Note that for reasons of style, these words are not capitalized in this
      document.</para>

  </section>
  
  <section><title>Normative References</title>

    <bibliolist> <bibliomixed id="xdi-core-1.0">
      <abbrev>OASIS-XDI-Core-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-core-1.0/xdi-core-1.0-wd01.xml">OASIS XDI 1.0 Core Specification</ulink></title>
      <author><firstname>Joseph </firstname> <surname>Boyle</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>. 
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-core.html">&latest-loc;/xdi-core.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-messaging-1.0">
      <abbrev>OASIS-XDI-Messaging-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-messaging-1.0/xdi-messaging-1.0-wd01.xml">OASIS XDI 1.0 Messaging Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-messaging.html">&latest-loc;/xdi-messaging.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-discovery-1.0">
      <abbrev>OASIS-XDI-Discovery-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-discovery-1.0/xdi-discovery-1.0-wd01.xml">OASIS XDI 1.0 Discovery Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-discovery.html">&latest-loc;/xdi-discovery.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-link-contracts-1.0">
      <abbrev>OASIS-XDI-Link-Contracts-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-link-contracts-1.0/xdi-cryptographic-profiles-1.0-wd01.xml">OASIS XDI 1.0 Link Contracts Specification</ulink></title>
      <author><firstname>Dan </firstname> <surname>Blum</surname></author>,
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-link-contracts.html">&latest-loc;/xdi-link-contracts.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-security-mechanisms-1.0">
	      <abbrev>OASIS-XDI-Security-Mechanisms-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-security-mechanisms-1.0/xdi-security-mechanisms-1.0-wd01.xml">OASIS XDI 1.0 Security Mechanisms Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-security-mechanisms.html">&latest-loc;/xdi-security-mechanisms.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="xdi-privacy-mechanisms-1.0">
      <abbrev>OASIS-XDI-Privacy-Mechanisms-V1.0</abbrev> <date>&pubdate; </date>
      <title><ulink url="../../xdi-privacy-mechanisms-1.0/xdi-privacy-mechanisms-1.0-wd01.xml">OASIS XDI 1.0 Privacy Mechanisms Specification</ulink></title>
      <author><firstname>Markus </firstname> <surname>Sabadello</surname></author>,
      <author><firstname>Drummond </firstname> <surname>Reed</surname></author>.
      <releaseinfo>OASIS &standard;. </releaseinfo>
      <citetitle><ulink url="&latest-loc;/xdi-privacy-mechanisms.html">&latest-loc;/xdi-privacy.html</ulink>.</citetitle>
    </bibliomixed> <bibliomixed id="rfc2119">
      <abbrev>RFC 2119</abbrev><date>March 1997</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc2119.txt">Key words for use in RFCs to Indicate Requirement Levels</ulink></title>
      <author><firstname>S. </firstname> <surname>Bradner</surname></author>. 
      <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed> <bibliomixed id="rfc6749">
      <abbrev>RFC 6749</abbrev><date>October 2012</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc6749.txt">The OAuth 2.0 Authorization Framework</ulink></title>
      <author><firstname>D. </firstname> <surname>Hardt </surname></author>, 
       <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed> <bibliomixed id="rfc6750">
      <abbrev>RFC 6750</abbrev><date>October 2012</date>
      <title><ulink url="http://www.ietf.org/rfc/rfc6750.txt">The OAuth 2.0 Authorization Framework: Bearer Token Usage</ulink></title>
      <author><firstname>M. </firstname> <surname>Jones</surname></author>, 
      <author><firstname>D. </firstname> <surname>Hardt</surname></author>.
      <releaseinfo>IETF (Internet Engineering Task Force)</releaseinfo>
    </bibliomixed>
  </bibliolist>

</section>

<section><title>Non-Normative References</title>

    <bibliolist> <bibliomixed id="cid-1">
      <abbrev>CID-1-Cryptographic-Identifiers</abbrev><date>September 2015</date>
      <title><ulink url="https://github.com/projectdanube/xdi2-crypto-ec25519/blob/master/XDI%20cid-1%20scheme%20draft%20v2.pdf">The "cid-1" XDI identifier scheme</ulink></title>
      <author><firstname>M. </firstname> <surname>Sabadello</surname></author>. 
      <releaseinfo>Github draft v2</releaseinfo>
    </bibliomixed> <bibliomixed id="nike">
      <abbrev>NIKE</abbrev><date>October 2012</date>
      <title><ulink url="https://eprint.iacr.org/2012/732.pdf">Non-Interactive Key Exchange</ulink></title>
      <author><firstname>E. </firstname> <surname>Freire</surname></author>, 
      <author><firstname>D. </firstname> <surname>Hofheinz</surname></author>, 
      <author><firstname>E. </firstname> <surname>Kiltz</surname></author>, 
      <author><firstname>K. </firstname> <surname>Paterson</surname></author>.
      <releaseinfo>Cryptology ePrint Archive</releaseinfo>
    </bibliomixed> <bibliomixed id="bip32">
      <abbrev>BIP-32</abbrev><date>February 2012</date>
      <title><ulink url="https://eprint.iacr.org/2012/732.pdf">BIP32: Hierarchical Deterministic Wallets</ulink></title>
      <author><firstname>P. </firstname> <surname>Wuille</surname></author>.
      <releaseinfo>Bitcoin Improvement Proposals</releaseinfo>
    </bibliomixed>
  </bibliolist>

</section>

</section>

<section><title>XDI Cryptography</title>

<para>XDI cryptography is used to achieve integrity, authenticity and confidentiality for
XDI graphs and XDI messages. Therefore, the concepts and operations defined in this specification
are used heavily in <xref linkend="xdi-messaging-1.0"/> and <xref linkend="xdi-link-contracts-1.0"/>.</para>

<para>This specification defines the standard structure and vocabulary of the following
XDI cryptographic concepts and operations:</para>

<itemizedlist>
<listitem><para>Key pairs (see <xref linkend="s.keypairs"/>)</para></listitem>
<listitem><para>Keys (see <xref linkend="s.keys"/>)</para></listitem>
<listitem><para>Tokens (see <xref linkend="s.tokens"/>)</para></listitem>
<listitem><para>Digests (see <xref linkend="s.digests"/>)</para></listitem>
<listitem><para>Signatures (see <xref linkend="s.signatures"/>)</para></listitem>
<listitem><para>Encryption (see <xref linkend="s.encryption"/>)</para></listitem>
</itemizedlist>

<para>Note that many dictionary terms such as <code>&lt;$key></code> or <code>&lt;$token></code> that
are defined in this specification are by themselves not expressive enough to be useful for concrete
cryptographic operations. Therefore, the meaning and purpose of such basic dictionary terms are
commonly enhanced by subsumption relationships (i.e. <code>$is#</code> type relations),
by composition relationships (i.e. contextual relations, see
section <glossterm>Core Relations</glossterm> in <xref linkend="xdi-core-1.0"/>),
and/or by the specialization pattern (i.e. a sequence of identifiers, see
section <glossterm>Specialization and Generalization</glossterm> in <xref linkend="xdi-core-1.0"/>).</para>

<para>Also note that many cryptographic structures can be expressed either as singletons or as collection members.
In the latter case, well-known patterns such as the <glossterm>ordered/unordered reference pattern</glossterm>
or the <glossterm>name/number reference pattern</glossterm> (see <xref linkend="xdi-core-1.0"/>) may be used,
e.g. to establish an order of multiple cryptographic signatures, or to associate names with cryptographic keys.</para>

</section>

<section id="s.scope"><title>Cryptographic Scope</title>

<para>Digests (see <xref linkend="s.digests"/>), signatures (see <xref linkend="s.signatures"/>) and
encryption (see <xref linkend="s.encryption"/>) always
apply to a certain set of XDI statements that get hashed, signed or encrypted. This set of XDI statements is called the
<firstterm>cryptographic scope</firstterm> (or short <firstterm>scope</firstterm>) of the cryptographic
operation. The scope may include:</para>

<itemizedlist>
<listitem><para>All XDI statements in a graph</para></listitem>
<listitem><para>All XDI statements rooted in one or more subgraphs</para></listitem>
<listitem><para>A single XDI statement</para></listitem>
<listitem><para>Any arbitrary set of XDI statements</para></listitem>
</itemizedlist>

<para>The scope of the cryptographic operation by default includes 
all XDI statements rooted in the parent context of the XDI attribute representing the cryptographic
digest (<code>&lt;$digest></code>), cryptographic signature (<code>&lt;$sig></code>)
or encrypted data (<code>&lt;$encrypt></code>), EXCLUDING:</para>

<itemizedlist>
<listitem><para>All XDI statements rooted in the XDI attribute, and</para></listitem>
<listitem><para>The contextual statement that establishes the XDI attribute itself.</para></listitem>
</itemizedlist>

<para>To express a scope other than the default, the <code>$has</code> aggregation
relation is used as follows:</para>

<itemizedlist>
<listitem><para>To express a scope that includes all XDI statements in a graph or
all XDI statements rooted in one or more
subgraphs, a <code>$has</code> aggregation relation is added on the subgraph(s):</para>
<programlisting>&lt;$sig>/$has/&lt;-- subgraph -->
</programlisting>
</listitem>
<listitem><para>To express a scope that includes a single XDI statement or
any arbitrary set of XDI statements,
a <code>$has</code> aggregation relation is added on an inner root:</para>
<programlisting>(&lt;$sig>/$has)&lt;-- inner graph -->
</programlisting>
</listitem>
</itemizedlist>

</section>

<section id="s.graph.normalization"><title>Graph Normalization</title>

<para>In order to produce a sequence of bytes that can be used as input for encryption, digests and signatures,
the XDI statements within the scope have to be serialized in a normalized form. This is done using the following
algorithm:</para>

<orderedlist>
<listitem><para>A temporary <firstterm>scope graph</firstterm> is constructed which contains exactly
the XDI statements that are within the cryptographic scope.</para></listitem>
<listitem><para>The <firstterm>scope graph</firstterm> is serialized using the following rules:
<itemizedlist>
<listitem><para>Use the XDI JSON serialization format (see <glossterm>XDI JSON Format Serialization Rules</glossterm>
in <xref linkend="xdi-core-1.0"/>)</para></listitem>
<listitem><para>Set the <code>implied</code> parameter to <code>0</code>.</para></listitem>
<listitem><para>Apply rules for alphabetically ordering XDI statements in the JSON object structure
(see <glossterm>Readability Rules</glossterm> in <xref linkend="xdi-core-1.0"/>).</para></listitem>
</itemizedlist>
</para></listitem>
<listitem><para>The serialized scope graph is encoded in UTF-8 to produce a sequence of bytes that
can be used as input for cryptographic operations.</para></listitem>
</orderedlist>

</section>

<section id="s.keypairs"><title>Key Pairs: <code>$keypair</code></title>

<para>A <firstterm>cryptographic key pair</firstterm> is represented as an XDI entity in a graph. It may
be either an entity singleton identified by a <code>$keypair</code> context:</para>

<programlisting>$keypair
</programlisting>

<para>Or it may be a member of an entity collection identified by a <code>[$keypair]</code> context.</para>

<programlisting>[$keypair]&lt;--key-pair-id-->
</programlisting>

<para>A <code>$keypair</code> entity may be specialized (e.g. by a <code>$sig</code>, <code>$encrypt</code>,
or <code>$msg</code> entity) to identify a certain purpose of the key pair such as signatures or
encryption, or the use of a key pair for XDI messaging:</para>

<programlisting>$sig$keypair
$encrypt$keypair
$msg$sig$keypair
$msg$encrypt$keypair
</programlisting>

<section><title>Algorithms</title>

<para>A <code>$keypair</code> entity SHOULD have a <code>$is#</code> type relation, in order
to express the algorithm used to produce the cryptographic key pair.</para>

<para>XDI processors MUST support the following key pair algorithms:</para>

<itemizedlist>
<listitem><para><code>$rsa$2048</code>: 2048 bit RSA key pair</para></listitem>
<listitem><para><code>$dsa$2048</code>: 2048 bit DSA key pair</para></listitem>
<listitem><para><code>$ed25519</code>: 32 byte Ed25519 key pair on the Curve25519 elliptic curve</para></listitem>
</itemizedlist>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>$keypair</code> entities:</para>

<programlisting>=!:uuid:x-alice$msg$sig$keypair/$is#/$rsa$2048
=!:uuid:x-alice$msg$encrypt$keypair/$is#/$rsa$2048

=!:uuid:x-alice[$keypair]*!:uuid:x-2/$is#/$dsa$2048
=!:uuid:x-alice[$keypair]*!:uuid:x-3/$is#/$dsa$2048
=!:uuid:x-alice[$keypair]*!:uuid:x-4/$is#/$dsa$2048
=!:uuid:x-alice[$keypair]*!:uuid:x-5/$is#/$ed25519
</programlisting>

</section>

</section>

<section id="s.keys"><title>Keys: <code>&lt;$key></code></title>

<para>A <firstterm>cryptographic key</firstterm> is represented as an XDI attribute in a graph. It may
be either an attribute singleton identified by a <code>&lt;$key></code> context:</para>

<programlisting>&lt;$key>
</programlisting>

<para>Or it may be a member of an attribute collection identified by a <code>[&lt;$key>]</code> context.</para>

<programlisting>[&lt;$key>]&lt;--key-id-->
</programlisting>

<para>The literal value of the attribute is the key encoded in a certain format:</para>

<programlisting>&lt;$key>/&amp;/"... encoded cryptographic key ..."
</programlisting>

<section id="s.public.keys"><title><code>&lt;$public></code></title>

<para>A <code>&lt;$key></code> attribute may be specialized by a <code>&lt;$public></code> attribute
to identify a <firstterm>cryptographic public key</firstterm> used in asymmetric cryptography:</para>

<programlisting>&lt;$public>&lt;$key>
</programlisting>

<para>A <code>&lt;$public>&lt;$key></code> attribute MAY be placed under a <code>$keypair</code> entity, in order
to express a composition relationship between a key pair and a public key:</para>

<programlisting>$keypair&lt;$public>&lt;$key>
</programlisting>

<para>In order to enable public key infrastructures (PKIs) for XDI, public keys SHOULD be discoverable
for XDI actors (see <xref linkend="xdi-discovery-1.0"/>), and they SHOULD be publicly accessible
(see section <glossterm>Public Link Contract</glossterm> in <xref linkend="xdi-link-contracts-1.0"/>).</para>

</section>

<section id="s.private.keys"><title><code>&lt;$private></code></title>

<para>A <code>&lt;$key></code> attribute may be specialized by a <code>&lt;$private></code> attribute
to identify a <firstterm>cryptographic private key</firstterm> used in asymmetric cryptography:</para>

<programlisting>&lt;$private>&lt;$key>
</programlisting>

<para>A <code>&lt;$private>&lt;$key></code> attribute MAY be placed under a <code>$keypair</code> entity, in order
to express a composition relationship between a key pair and a private key:</para>

<programlisting>$keypair&lt;$private>&lt;$key>
</programlisting>

</section>

<section id="s.secret.keys"><title><code>&lt;$secret></code></title>

<para>A <code>&lt;$key></code> attribute may be specialized by a <code>&lt;$secret></code> attribute
to identify a <firstterm>cryptographic secret key</firstterm> used in symmetric cryptography:</para>

<programlisting>&lt;$secret>&lt;$key>
</programlisting>

</section>

<section><title>Algorithms and Formats</title>

<para>A <code>&lt;$key></code> attribute SHOULD have a <code>$is#</code> type relation, in order
to express the algorithm used to produce the cryptographic key:</para>

<programlisting>&lt;$key>/$is#/&lt;--key-algorithm-->
</programlisting>

<para>XDI processors MUST support the following key algorithms:</para>

<itemizedlist>
<listitem><para><code>$rsa$2048</code>: 2048 bit RSA key</para></listitem>
<listitem><para><code>$dsa$2048</code>: 2048 bit DSA key</para></listitem>
<listitem><para><code>$aes$256</code>: 256 bit AES secret key</para></listitem>
<listitem><para><code>$ed25519</code>: 32 byte Ed25519 key on the Curve25519 elliptic curve</para></listitem>
</itemizedlist>

<para>XDI processors MUST support the following encodings and formats:</para>

<itemizedlist>
<listitem><para>For RSA public keys: PEM-encoded X.509 format</para></listitem>
<listitem><para>For DSA public keys: PEM-encoded X.509 format</para></listitem>
<listitem><para>For Ed25519 public keys: Base64-encoded byte format</para></listitem>
<listitem><para>For RSA private keys: PEM-encoded PKCS #8 format</para></listitem>
<listitem><para>For DSA private keys: PEM-encoded PKCS #8 format</para></listitem>
<listitem><para>For Ed25519 private keys: Base64-encoded byte format</para></listitem>
<listitem><para>For AES secret keys: Base64-encoded byte format</para></listitem>
</itemizedlist>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>&lt;$key></code> attributes:</para>

<programlisting>&lt;$public>&lt;$key>/&amp;/"... encoded cryptographic key ..."
&lt;$public>&lt;$key>/$is#/$rsa$256

&lt;$private>&lt;$key>/&amp;/"... encoded cryptographic key ..."
&lt;$private>&lt;$key>/$is#/$rsa$256

&lt;$secret>&lt;$key>/&amp;/"... encoded cryptographic key ..."
&lt;$secret>&lt;$key>/$is#/$aes$256

=!:uuid:x-alice$msg$sig$keypair&lt;$public>&lt;$key>/&amp;/"... encoded cryptographic key ..."
=!:uuid:x-alice$msg$sig$keypair&lt;$private>&lt;$key>/&amp;/"... encoded cryptographic key ..."
=!:uuid:x-alice$msg$encrypt$keypair&lt;$public>&lt;$key>/&amp;/"... encoded cryptographic key ..."
=!:uuid:x-alice$msg$encrypt$keypair&lt;$private>&lt;$key>/&amp;/"... encoded cryptographic key ..."
</programlisting>

</section>

</section>

<section id="s.tokens"><title>Tokens: <code>&lt;$token></code></title>

<para>A <firstterm>token</firstterm> is represented as an XDI attribute in a graph. It may
be either an attribute singleton identified by a <code>&lt;$token></code> context:</para>

<programlisting>&lt;$token>
</programlisting>

<para>Or it may be a member of an attribute collection identified by a <code>[&lt;$token>]</code> context.</para>

<programlisting>[&lt;$token>]&lt;--token-id-->
</programlisting>

<para>The literal value of the attribute is the digest encoded in Base64:</para>

<programlisting>&lt;$token>/&amp;/"... token ..."
</programlisting>

<para>In order to express whether a token is valid, an attribute singleton identified by a
<code>&lt;$valid></code> context can be used:</para>

<programlisting>&lt;$token>&lt;$valid>/&amp;/true
</programlisting>

<para>Determining whether a token is valid or not may be done in different ways. This is
out of scope of this specification and depends on the concrete environment of XDI agents and
XDI endpoints.</para>

<para>A <glossterm>token</glossterm> can be used as follows:</para>

<itemizedlist>
<listitem><para>It may be added to an XDI message, in order to ensure authenticity of the message.</para></listitem>
<listitem><para>It may be used inside a condition of an XDI link contract's policy, in order to evaluate if a message's
token is valid.</para></listitem>
<listitem><para>It may be used inside a condition of an XDI link contract's policy, in order to evaluate if a message's
token has a certain value.</para></listitem>
</itemizedlist>

<section id="s.secret.tokens"><title><code>&lt;$secret></code></title>

<para>A <code>&lt;$token></code> attribute may be specialized by a <code>&lt;$secret></code> attribute
to identify a <firstterm>secret token</firstterm>:</para>

<programlisting>&lt;$secret>&lt;$token>
</programlisting>

<para>A <glossterm>secret token</glossterm> can be used as a password and added to an XDI message,
in order to ensure authenticity of the message.</para>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>&lt;$token></code> attributes:</para>

<programlisting>&lt;$secret>&lt;$token>/&amp;/"... secret token ..."

=!:uuid:x-alice[$msg]*!:uuid:x-1/$is()/(=!:uuid:x-bob)
=!:uuid:x-alice[$msg]*!:uuid:x-1$do/$get/=!:uuid:x-bob&lt;#email>
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$secret>&lt;$token>/&amp;/"... secret token ..."

(=!:uuid:x-bob/=!:uuid:x-alice)$do/$get/=!:uuid:x-bob
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$from}/$is/=!:uuid:x-alice
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$msg}&lt;$secret>&lt;$token>&lt;$valid>/&amp;/true
</programlisting>

</section>

</section>

<section id="s.digests"><title>Digests: <code>&lt;$digest></code></title>

<para>A <firstterm>cryptographic digest</firstterm> is represented as an XDI attribute in a graph. It may
be either an attribute singleton identified by a <code>&lt;$digest></code> context:</para>

<programlisting>&lt;$digest>
</programlisting>

<para>Or it may be a member of an attribute collection identified by a <code>[&lt;$digest>]</code> context.</para>

<programlisting>[&lt;$digest>]&lt;--digest-id-->
</programlisting>

<para>The literal value of the attribute is the digest encoded in Base64:</para>

<programlisting>&lt;$digest>/&amp;/"... Base64-encoded cryptographic digest ..."
</programlisting>

<para>In order to express whether a digest is valid (i.e. whether it can be reproduced),
an attribute singleton identified by a <code>&lt;$valid></code> can be used:</para>

<programlisting>&lt;$digest>&lt;$valid>/&amp;/true
</programlisting>

<para>A <firstterm>cryptographic digest</firstterm> can be used as follows:</para>

<itemizedlist>
<listitem><para>It may be added to an XDI graph, in order to ensure integrity of XDI statements in the graph.</para></listitem>
<listitem><para>It may be added to an XDI message, in order to ensure integrity of the message.</para></listitem>
<listitem><para>It may be used inside a condition of an XDI link contract's policy, in order to evaluate if a message's
digest is valid.</para></listitem>
<listitem><para>It may be used inside a condition of an XDI link contract's policy, in order to evaluate if a message's
digest has a certain value.</para></listitem>
</itemizedlist>

<section><title>Scope</title>

<para>The scope of the cryptographic digest is determined as specified in <xref linkend="s.scope"/>.</para>

</section>

<section><title>Algorithms</title>

<para>A <code>&lt;$digest></code> attribute SHOULD have a <code>$is#</code> type relation, in order
to express the algorithm used to produce the cryptographic digest.</para>

<para>XDI processors MUST support the following digest algorithms:</para>

<itemizedlist>
<listitem><para><code>$sha$256</code>: digest produced by the SHA-256 cryptographic hash function</para></listitem>
<listitem><para><code>$md$5</code>: digest produced by the MD5 hash function</para></listitem>
</itemizedlist>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>&lt;$digest></code> attributes:</para>

<programlisting>&lt;$digest>/&amp;/"... Base64-encoded cryptographic digest ..."
&lt;$digest>/$is#/$sha$256

=!:uuid:x-alice[$msg]*!:uuid:x-1/$is()/(=!:uuid:x-bob)
=!:uuid:x-alice[$msg]*!:uuid:x-1$do/$get/=!:uuid:x-bob&lt;#email>
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$digest>/&amp;/"... Base64-encoded cryptographic digest ..."
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$digest>/$is#/$sha$256

(=!:uuid:x-bob/=!:uuid:x-alice)$do/$all/
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$msg}&lt;$digest>&lt;$valid>/&amp;/true
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$msg}&lt;$digest>/&amp;/"... Base64-encoded cryptographic digest ...""
</programlisting>

</section>

</section>

<section id="s.signatures"><title>Signatures: <code>&lt;$sig></code></title>

<para>A <firstterm>cryptographic signature</firstterm> is represented as an XDI attribute in a graph. It may
be either an attribute singleton identified by a <code>&lt;$sig></code> context:</para>

<programlisting>&lt;$sig>
</programlisting>

<para>Or it may be a member of an attribute collection identified by a <code>[&lt;$sig>]</code> context.</para>

<programlisting>[&lt;$sig>]&lt;--cryptographic-signature-id-->
</programlisting>

<para>The literal value of the attribute is the cryptographic signature encoded in Base64:</para>

<programlisting>&lt;$sig>/&amp;/"... Base64-encoded cryptographic signature ..."
</programlisting>

<para>The attribute may use a <code>&lt;$public>&lt;$key></code> relation to identify a
public key that can be used to validate the cryptographic signature:</para>

<programlisting>&lt;$sig>/&lt;$public>&lt;$key>/&lt;--public-key-->
</programlisting>

<para>In the absence of this relation, it may be possible to determine the public key that can be used
to validate the cryptographic signature in other ways:</para>

<itemizedlist>
<listitem><para>There may be one or more "default" public key(s) associated with the graph that contains
the cryptographic signature.</para></listitem>
<listitem><para>If the scope of the cryptographic signature is an XDI message, then the public key is assumed
to be associated with the sending peer of the message and may be obtained
using <xref linkend="xdi-discovery-1.0"/>).</para></listitem>
<listitem><para>It may be possible to extract the public key from a cryptographic identifier (see
<xref linkend="s.cryptographic.identifiers"/>) that is the sending peer of an XDI message or otherwise
associated with the cryptographic signature.</para></listitem>
<listitem><para>Other options that are out of scope of this specification and typically depend on the
concrete environment of XDI agents and XDI endpoints.</para></listitem>
</itemizedlist>

<para>In order to express whether a signature is valid (i.e. whether it can be validated using a certain key),
an attribute singleton identified by a <code>&lt;$valid></code> can be used:</para>

<programlisting>&lt;$sig>&lt;$valid>/&amp;/true
</programlisting>

<para>A <firstterm>cryptographic signature</firstterm> can be used as follows:</para>

<itemizedlist>
<listitem><para>It may be added to an XDI graph, in order to ensure integrity and authenticity of XDI statements in the graph.</para></listitem>
<listitem><para>It may be added to an XDI message, in order to ensure integrity and authenticity of the message.</para></listitem>
<listitem><para>It may be used inside a condition of an XDI link contract's policy, in order to evaluate if a message's
signature is valid.</para></listitem>
</itemizedlist>

<section><title>Scope</title>

<para>The scope of the cryptographic signature is determined as specified in <xref linkend="s.scope"/>.</para>

</section>

<section><title>Algorithms</title>

<para>A <code>&lt;$sig></code> attribute SHOULD have a <code>$is#</code> type relation, in order
to express the algorithm used to produce the cryptographic signature.</para>

<para>XDI processors MUST support the following signature algorithms:</para>

<itemizedlist>
<listitem><para><code>$sha$256$rsa$2048</code>: cryptographic signature produced by a 2048 bit RSA private key and the SHA-256 cryptographic hash function</para></listitem>
<listitem><para><code>$sha$256$dsa$2048</code>: cryptographic signature produced by a 2048 bit DSA private key and the SHA-256 cryptographic hash function</para></listitem>
<listitem><para><code>$sha$256$aes$256</code>: message authentication code (MAC) produced by a 256 bit AES secret key and the SHA-256 cryptographic hash function</para></listitem>
<listitem><para><code>$ed25519$64</code>: 64 byte cryptographic signature produced by the Ed25519 signature algorithm on the Curve25519 elliptic curve</para></listitem>
<listitem><para><code>$ecdsa$64</code>: 64 byte cryptographic signature produced by the ECDSA signature algorithm on the P-256 elliptic curve</para></listitem>
</itemizedlist>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>&lt;$sig></code> attributes:</para>

<programlisting>=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-1>/&amp;/"... Base64-encoded cryptographic signature ..."
=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-1>/$is#/$sha256$rsa$2048
=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-1>/$has/=!:uuid:x-alice[&lt;#email>]
=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-2>/&amp;/"... Base64-encoded cryptographic signature ..."
=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-2>/$is#/$sha256$rsa$2048
(=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-2>/$has)=!:uuid:x-alice/$is#employee/+!:uuid:x-company
(=!:uuid:x-alice[&lt;$sig>]&lt;*!:uuid:x-2>/$has)=!:uuid:x-alice/#friend/=!:uuid:x-bob

=!:uuid:x-alice[$msg]*!:uuid:x-1/$is()/(=!:uuid:x-bob)
=!:uuid:x-alice[$msg]*!:uuid:x-1$do/$get/=!:uuid:x-bob&lt;#email>
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$sig>/&amp;/"... Base64-encoded cryptographic signature ..."
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$sig>/$is#/$sha$256$rsa$2048
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$sig>/&lt;$public>&lt;$key>/=!:uuid:x-alice$msg$sig$keypair&lt;$public>&lt;$key>

(=!:uuid:x-bob/=!:uuid:x-alice)$do/$get/=!:uuid:x-bob
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$from}/$is/=!:uuid:x-alice
(=!:uuid:x-bob/=!:uuid:x-alice)($do$if$and/$true){$msg}&lt;$sig>&lt;$valid>/&amp;/true
</programlisting>

</section>

</section>

<section id="s.encryption"><title>Encryption: <code>&lt;$encrypt></code></title>

<para>Any set of XDI statements may be <firstterm>cryptographically encrypted</firstterm>. The encrypted
data is represented as an XDI attribute in a graph. It may
be either an attribute singleton identified by a <code>&lt;$encrypt></code> context:</para>

<programlisting>&lt;$encrypt>
</programlisting>

<para>Or it may be a member of an attribute collection identified by a <code>[&lt;$encrypt>]</code> context.</para>

<programlisting>[&lt;$encrypt>]&lt;--encrypted-data-id-->
</programlisting>

<para>The literal value of the attribute is the encrypted data encoded in Base64:</para>

<programlisting>&lt;$encrypt>/&amp;/"... Base64-encoded encrypted data ..."
</programlisting>

<para>The attribute may use a <code>&lt;$private>&lt;$key></code> relation to identify a
private key that can be used to decrypt the encrypted subgraph:</para>

<programlisting>&lt;$encrypt>/&lt;$private>&lt;$key>/&lt;--private-key-->
</programlisting>

<para>In the absence of this relation, it may be possible to determine the private key that can be used
to decrypt the encrypted subgraph in other ways:</para>

<itemizedlist>
<listitem><para>There may be one or more "default" private key(s) associated with the graph that contains
the encrypted subgraph.</para></listitem>
<listitem><para>If the scope of the encrypted subgraph is an XDI message, then the private key is assumed
to be associated with the receiving peer of the message.</para></listitem>
<listitem><para>Other options that are out of scope of this specification and typically depend on the
concrete environment of XDI agents and XDI endpoints.</para></listitem>
</itemizedlist>

<para>A <firstterm>encrypted subgraph</firstterm> can be used as follows:</para>

<itemizedlist>
<listitem><para>It may be added to an XDI graph, in order to ensure confidentiality of XDI statements in the graph.</para></listitem>
<listitem><para>It may be added to an XDI message, in order to ensure confidentiality of the message.</para></listitem>
</itemizedlist>

<section><title>Scope</title>

<para>The scope of the encrypted data is determined as specified in <xref linkend="s.scope"/>.</para>

</section>

<section><title>Algorithms</title>

<para>A <code>&lt;$encrypt></code> attribute SHOULD have a <code>$is#</code> type relation, in order
to express the algorithm used to produce the encrypted data.</para>

<para>XDI processors MUST support the following encryption algorithms:</para>

<itemizedlist>
<listitem><para><code>$rsa</code>: encrypted data produced by an RSA private key</para></listitem>
<listitem><para><code>$aes$ecb$pkcs$5</code>: encrypted data produced by an AES private key with ECB block cipher mode and PKCS #5 padding</para></listitem>
</itemizedlist>

</section>

<section><title>Examples</title>

<para>Following are additional examples of the use of <code>&lt;$encrypt></code> attributes:</para>

<programlisting>=!:uuid:x-alice[$msg]*!:uuid:x-1/$is()/(=!:uuid:x-bob)
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$encrypt>/&amp;/"... Base64-encoded encrypted data ..."
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$encrypt>/$is#/$rsa
=!:uuid:x-alice[$msg]*!:uuid:x-1&lt;$encrypt>/&lt;$private>&lt;$key>/=!:uuid:x-bob$msg$encrypt$keypair&lt;$private>&lt;$key>
</programlisting>

</section>

</section>

<section id="s.cryptographic.identifiers"><title>Cryptographic Identifiers</title>

<para>In addition to storing cryptographic information such as keys or signatures as literals in
an XDI graph, cryptographic properties may also be found in XDI identifiers. Such identifiers
are called <glossterm>cryptographic identifiers</glossterm>.</para>

<para>Cryptographic identifiers are typically derived from public keys. One advantage
of such identifiers is that a signed XDI message
can be validated directly with the public key embedded in the XDI address that identifies
the sender of the message.
In other words, no a priori relationships or round-trips are necessary in order for two XDI
peers to be able to communicate securely (this is also known as a NIKE technique,
see <xref linkend="nike"/>). Among other
scenarios, this can be useful for decentralized registration and discovery, where an XDI peer wishes
to register with multiple other peers, without relying on a central authority for issuing and
establishing ownership of XDI identifiers.</para>

<para>Cryptographic identifiers are also useful for establishing relationships between XDI agents
and XDI endpoints, as well as for temporary/ephemeral relationships such as browser or WebSocket
sessions. Another use case is hierarchical deterministic keys, where different key pairs may be
cryptographically correlated in a provable way.</para>

<para>For cryptographic identifiers, the scheme prefix <code>:cid-</code> is reserved
(see <glossterm>CID</glossterm> in <xref linkend="xdi-core-1.0"/>).</para>

<para>The following cryptographic identifier schemes are defined/proposed:</para>

<itemizedlist>
<listitem><para><code>:cid-1:</code> is a proposed scheme based on
Ed25519 elliptic curve public keys (see <xref linkend="cid-1"/>).</para>
<para>Example: <code>=!:cid-1:x1tFvHLAz45mUw5WH3tawuwimawiSYUnycQTgME6xEU3wo1WDfK</code></para></listitem>
<listitem><para><code>:cid-2:</code> is a proposed scheme based on
BIP-32 hierarchical deterministic keys (see <xref linkend="bip32"/>).</para></listitem>
</itemizedlist>

</section>

</article>
