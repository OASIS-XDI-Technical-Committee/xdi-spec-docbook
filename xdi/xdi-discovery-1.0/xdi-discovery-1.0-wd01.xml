<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" 
href="http://docs.oasis-open.org/templates/DocBook/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"[
<!--the document properties-->
<!ENTITY name "oasis-specification">
<!ENTITY pversion "0.0">
<!ENTITY version "1.01">
<!ENTITY stage "wd01">
<!ENTITY standard "Working Draft 01">
<!ENTITY this-loc "http://docs.oasis-open.org/templates/DocBook/spec-&version;">
<!ENTITY previous-loc "http://docs.oasis-open.org/templates/DocBook/spec-&pversion;">
<!ENTITY latest-loc "http://docs.oasis-open.org/templates/DocBook/oasis-specification">
<!ENTITY pubdate "25 July 2013">
<!ENTITY title "XDI Discovery V&version;">
]>
<article version="5.0" xmlns="http://docbook.org/ns/docbook">
  <info>
    <title>&title;</title>

    <pubdate>&pubdate;</pubdate>

    <toc>
      <title>Table of Contents</title>
    </toc>

    <changelog>
      <itemizedlist>
        <listitem>2014-03-28 - Dan Blum: Updated to accomplish the symbol
        shift between @, + and #</listitem>

        <listitem>2013-08-17 - Drummond Reed: updated to use &lt;&gt; syntax
        on all attributes.</listitem>

        <listitem>2013-04-23 - Drummond Reed: updated to revised XDI
        syntax.</listitem>

        <listitem>2013-03-04 - Drummond Reed: a) update protocol steps and
        examples, b) revise &lt;ttl&gt; definition, c)
        update&lt;--order-number--&gt; rules.</listitem>

        <listitem>2013-02-24 - Drummond Reed: Updated terminology and
        references to related proposals; revised the example graph.</listitem>

        <listitem>2013-01-30 - Drummond Reed: Added URI Expiration Attribute
        section and updated examples.</listitem>

        <listitem>2013-01-25 - Drummond Reed: Updated to add more external
        spec references and clarify terminology.</listitem>

        <listitem>2012-10-01 - Drummond Reed: Updated to use approved version
        of XdiMultiplicity proposal.</listitem>

        <listitem>2012-07-08 - Drummond Reed: Turned previous version of wiki
        page with general plan for XDI discovery into initial version of a
        formal proposal</listitem>
      </itemizedlist>
    </changelog>
  </info>

  <section>
    <title>Introduction</title>

    <para/>

    <section>
      <title>Security Considerations</title>

      <para>
        <calloutlist>
          <callout arearefs="???">
            <para>Transport</para>
          </callout>

          <callout arearefs="???">
            <para>Key Management</para>
          </callout>
        </calloutlist>
      </para>
    </section>

    <section>
      <title>Client Rules</title>

      <subtitle>Specifications and Requirements</subtitle>

      <orderedlist>
        <listitem>
          <para>Protocol</para>
          <para>Developers and Architects should use the https transport. The protocol for discovery
            is always a POST request. The common term in XDI specifications is 'message envelope'
            which refers to the POST data block given to the URI.</para>
          <para>The entire XDI graph containing one or more XDI messages is called the XDI message
            envelope. A message envelope MAY contain more than one message subgraph. A message MAY
            contain more than one operation statement. An XDI endpoint must execute all messages in
            a message envelope. </para>
          <para>The following are all valid message
            envelopes:<programlisting xmlns="">=<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SENDER</emphasis>[$msg]!1/$is()/([=])
=<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SENDER</emphasis>[$msg]!1$do/$get/(=alice)

-- Response --
{"([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)[&lt;$uri>]
&lt;!:sha512:<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SIG</emphasis>>"]
&amp;/&amp;":"https://mycloud.neustar.biz/users/%5B%3D%5D%21%3Auuid%3A0707f2ff-4266-9f14-0707-f2ff42669f14",
"([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)[&lt;$uri>]
&lt;!:sha512:<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SIG</emphasis>>"]
&amp;/&amp;":"http://mycloud.neustar.biz:14440/users/%5B%3D%5D%21%3Auuid%3A0707f2ff-4266-9f14-0707-f2ff42669f14",
"([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)&lt;$xdi>[&lt;$uri>]&lt;@1>/$ref":
["([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)[&lt;$uri>]
&lt;!:sha512:<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SIG</emphasis>>"],
"([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)&lt;$xdi>[&lt;$uri>]&lt;@0>/$ref":
["([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)[&lt;$uri>]
&lt;!:sha512:<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SIG</emphasis>>"],
"([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)&lt;$xdi>&lt;$uri>/$ref":["([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)[&lt;$uri>]
&lt;!:sha512:<emphasis xmlns="http://docbook.org/ns/docbook" role="bold">SIG</emphasis>>"],
"(=alice)/$ref":["([=]!:uuid:0707f2ff-4266-9f14-0707-f2ff42669f14)"]}
</programlisting>Note
            that this test registration has no associated endpoints, though it has placeholders for
            the primary and secondary endpoints. Additionally familiarity with the XDI Security
            Mechanisms Specification would allow a single signature for all endpoints, but in this
            case we have signed each statement individually.  </para>
          <para>The result is encoded as "application/xdi+json".</para>
          <para>Note: Discovery requests that ask for Authority respones MUST supply a LinkContract.
            Discovery against proxies may return a non error result with or without a valid
            endpoint.</para>
          <para/>
          <para>The term 'message envelope' provides a reference of origin irrespective of its
            processing by internal code or other functional features of the discovery
            endpoint.</para>
          <para>
            <para>In direct discovery, the XDI client performs all discovery steps itself. </para>
            <orderedlist>
              <listitem>
                <para>The XDI client MUST perform the first discovery step by sending the starting
                  XDI endpoint an <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://wiki.oasis-open.org/xdi/XdiMessagePatterns">XDI $get
                    message</link> requesting one or more of the desired &lt;$uri&gt; attributes for
                  the first peer root address. </para>
                <orderedlist>
                  <listitem>
                    <para>If there is more than one discovery step, the XDI client MUST request at
                      least one XDI endpoint type. </para>
                  </listitem>
                  <listitem>
                    <para>If the client desires the starting XDI endpoint to performing
                      dereferencing of the XDI response message as defined in <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://wiki.oasis-open.org/xdi/EquivalenceLinks">Equivalence
                        Links</link>, it MUST include the &lt;$deref&gt; parameter set to true.
                    </para>
                  </listitem>
                </orderedlist>
              </listitem>
              <listitem>
                <para>If the XDI endpoint is authoritative for or has a current cache of the
                  discovery request, it MUST return the requested subgraph. </para>
              </listitem>
              <listitem>
                <para>If there is only one discovery step, the protocol completes. </para>
              </listitem>
              <listitem>
                <para>If the XDI endpoint cannot fulfill the discovery request, it MUST return an
                  error and the protocol completes.
                  <?oxy_comment_start author="wmartin" timestamp="20140528T162725-0400" comment="Response Errors: should they be enumerated? Is returning an error for a NOT FOUND condition exposing secure information?"?></para>
                <?oxy_comment_end?>
                <listitem>
                  <para/>
                  <para>If there are multiple discovery steps, the client MUST select the next peer
                    root address and repeat the discovery process at the XDI endpoint URI discovered
                    for the previous peer root address. </para>
                </listitem>
                <listitem>
                  <para>This process MUST be continued until the protocol fails or completes.
                    Discovery requests are targetted to find endpoint(s) so a failure should not
                    block the exposure or return of endpoints found before or after-failure. </para>
                  <para>This failure with results paradigm enables  the semantics of collections of
                    endpoints. </para>
                </listitem>
                
              </listitem>
            </orderedlist>
          </para>
        </listitem>

        <listitem>
          <para>Endpoint constraints</para>
          <para>Endpoints must enforce Policy independent of external or pre-request activities in
            the discovery workflow.</para>
          <para>LinkContracts must be available to any discovery request. LinkContracts do not have
            to allow access to held endpoints. The absence of a LinkContract for discovery messaging
            is generally considered a security flaw.</para>
        </listitem>

        <listitem>
          <para>Request constraints</para>
          <para>Message envelopes should not contain more than 1 message id.</para>
          <para>Message envelopes must be signed if they make statements about the requestor's
            identity or location.</para>
          <para>The Link Contract included with a discovery request may be a public contract or an a
            priori negotiated LinkContract with the discovery server.</para>
        </listitem>
        <listitem>
          <para>Request Results</para>
          <para>XDI2 discovery endpoints will return the personal cloud endpoint and the its  public
            keys. Previous lists of information associated with iname's will no longer be returned
            in response messages.</para>
          <para>Examples of the latter are: </para>
        </listitem>

        <listitem>
          <para>Message encoding</para>
        </listitem>

        <listitem>
          <para>Proxies</para>
        </listitem>

        <listitem>
          <para>xdi-dictionary terms inclusion</para>
        </listitem>

        <listitem>
          <para>Response specification</para>

          <para>Attribute Handling</para>

          <para>Attribute Priority</para>

          <para>Attribute TTL</para>

          <para>Endpoint URI's</para>

          <itemizedlist>
            <listitem>
              <para>Single instance in graph</para>
            </listitem>

            <listitem>
              <para>Collection in graph</para>

              <para>Priority</para>

              <para>Required references</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Error Parsing</para>
        </listitem>
      </orderedlist>

      <para/>
    </section>

    <section>
      <title>Server Rules</title>

      <subtitle>Specifications and Requirements</subtitle>

      <orderedlist>
        <listitem>
          <para>Publishing Public Endpoint</para>
        </listitem>

        <listitem>
          <para>Public LinkContracts</para>
        </listitem>

        <listitem>
          <para>Proxies</para>
        </listitem>

        <listitem>
          <para>Response Serialization</para>
        </listitem>

        <listitem>
          <para>xdi-dictionary terms inclusion</para>
        </listitem>

        <listitem>
          <para>Peer Root Addresses</para>

          <para>BizGraphs</para>

          <para>Personal Graphs</para>

          <para>Visibility &amp; Implied roots</para>
        </listitem>

        <listitem>
          <para>$get [Retrieve]</para>
        </listitem>

        <listitem>
          <para>$set [Write]</para>
        </listitem>

        <listitem>
          <para>Endpoint rules</para>

          <para>Singleton</para>

          <para>Collection</para>

          <itemizedlist>
            <listitem>
              <para>Priority</para>
            </listitem>

            <listitem>
              <para>References</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Discovery request handling</para>
        </listitem>
      </orderedlist>

      <para/>
    </section>

    <section>
      <title>Peer to Peer Discovery and Hierarchical Common Roots</title>

      <itemizedList><listitem>
          <emphasis role="bold">Peer to Peer requirements</emphasis>

          <orderedlist/>
        </listitem>There is a notion of discovery between two peers; however
      the protocol is different from that used with a Common Root discovery
      endpoint(CRde). Additionally the endpoints in peer to peer do not have
      the extended environment for lookup that CRde does. We will revisit this
      in team review.<listitem>
          <emphasis role="bold">Common Root discovery</emphasis>

          <orderedlist/>
        </listitem></itemizedList>
    </section>

    <section>
      <title>XDI Discovery of non-XDI endpoints</title>
    </section>

    <section>
      <title>Interaction-Workflow</title>

      <para>&lt;$ref/&gt;</para>

      <section>
        <title>Message Graph Examples</title>

        <orderedlist numeration="lowerroman">
          <listitem>
            <para>&lt;$ref/&gt;</para>
          </listitem>

          <listitem>
            <para>&lt;$ref/&gt;</para>

            <table>
              <title>Semantic Message Decomposition</title>

              <tgroup cols="2">
                <colspec align="center"/>

                <thead>
                  <row>
                    <entry align="center">Message Number: XDI3Segment</entry>

                    <entry align="center">Description</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry>5.1.i: "xdi3segment from the message"</entry>

                    <entry>triple part(s) description (if triple
                    statement)</entry>
                  </row>

                  <row>
                    <entry/>

                    <entry/>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </listitem>
        </orderedlist>
      </section>
    </section>
  </section>
</article>
