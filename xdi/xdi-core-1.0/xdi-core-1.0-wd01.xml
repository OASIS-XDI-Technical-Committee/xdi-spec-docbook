<?xml version="1.0" encoding="UTF-8"?>
<!-- 
For use when a committee document points at the OASIS web site for publishing:
<?xml-stylesheet type="text/xsl" 
href="http://docs.oasis-open.org/templates/DocBook/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" 

For use when a committee document points to an embedded runtime installation:
<?xml-stylesheet type="text/xsl" 
         href="htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
        "htmlruntime/spec-0.6/docbook/docbookx.dtd" 

For use when a committee document is published in a local environment only
(note the instructions for local publishing require adjusting the stylesheet
 and DocBook directories in these declarations):
<?xml-stylesheet type="text/xsl" 
href="file:///c:/oasis/spec-0.6/stylesheets/oasis-specification-html-offline.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "file:///c:/oasis/spec-0.6/docbook/docbookx.dtd" 
-->
<?xml-stylesheet type="text/xsl" 
href="../../htmlruntime/spec-0.6/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
         "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" 
[
<!--the document properties-->
<!ENTITY name "xdi-core">
<!ENTITY pversion "0.1">
<!ENTITY version "1.0">
<!ENTITY stage "wd01">
<!ENTITY standard "Working Draft 01">
<!ENTITY this-loc "http://docs.oasis-open.org/xdi/spec-&version;">
<!ENTITY previous-loc "http://docs.oasis-open.org/xdi/spec-&pversion;">
<!ENTITY latest-loc "http://docs.oasis-open.org/xdi/spec">
<!ENTITY pubdate "25 September 2013">
<!ENTITY title "XDI Core V&version;">
]>
<article status="&standard;">

<articleinfo>
<title>&title;</title>

<!--releaseinfo role="cvs">
$Id: oasis-specification-0.6-wd04.xml,v 1.2 2012/06/14 01:57:23 admin Exp $
</releaseinfo-->

<productname>&name;</productname>
<productnumber>&version;-&stage;</productnumber>
<releaseinfo role="track">Standards Track Work Product</releaseinfo>

<releaseinfo role="OASIS-specification-this-authoritative">&this-loc;/&name;-&version;-&stage;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-this">&this-loc;/&name;-&version;-&stage;.html</releaseinfo>

<releaseinfo role="OASIS-specification-previous-authoritative">&previous-loc;/&name;-&pversion;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-previous">&previous-loc;/&name;-&pversion;.html</releaseinfo>

<releaseinfo role="OASIS-specification-latest-authoritative">&latest-loc;/&name;.xml</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.pdf</releaseinfo>
<releaseinfo role="OASIS-specification-latest">&latest-loc;/&name;.html</releaseinfo>

<releaseinfo role="committee"><ulink url="http://www.oasis-open.org/committees/xdi">OASIS XDI TC</ulink></releaseinfo>

<authorgroup>
  <editor>
    <firstname>Joseph</firstname><surname>Boyle</surname>
    <affiliation>
      <orgname>XDI.org</orgname>
    </affiliation>
    <email>firstname at orgname</email>
  </editor>
  <editor>
    <firstname>Drummond</firstname><surname>Reed</surname>
    <affiliation>
      <orgname>Respect Network</orgname>
    </affiliation>
    <email>drummond@respectnetwork.net</email>
  </editor>
  <editor>
    <firstname>Markus</firstname><surname>Sabadello</surname>
    <affiliation>
      <orgname>Project Danube</orgname>
    </affiliation>
    <email>sabadello@projectdanube.org</email>
  </editor>
</authorgroup>

<pubdate>&pubdate;</pubdate>

<copyright><year>2013</year>
<holder>OASIS Open, Inc. All Rights Reserved.</holder></copyright>

<legalnotice role="additional"><title>Additional artifacts</title>
<para>This prose specification is one component of a Work Product which also includes:</para>
<itemizedlist spacing="compact">
<listitem><para>
publishing materials: <ulink url="&this-loc;/&name;-&version;-&stage;.zip">&this-loc;/&name;-&version;-&stage;.zip</ulink></para>
</listitem>
</itemizedlist>
</legalnotice>

<legalnotice role="related"><title>Related work</title>
  <para>This document is primarily based on a set of proposals that had been collected by the OASIS XDI TC on its associated wiki at <ulink url="https://wiki.oasis-open.org/xdi/">https://wiki.oasis-open.org/xdi/</ulink>.</para>
</legalnotice>

<abstract><title>Abstract</title>
  <para>This working draft specifies the abstract pattern for all XDI core together with the binding to the http/https protocol for performing XDI operations using XDI messages.</para>
</abstract>

<!--legalnotice role="status"><title>Status</title>
<para>This is a work in progress contributed to the OASIS TC administration 
and does not at this time represent the consensus of any particular OASIS Technical Committee.
There are no plans to make this a formal Committee Specification as it is merely an internal
document made available to committee members to support the publishing process.</para>
</legalnotice-->

<legalnotice role="citation"><title>Citation format</title>
<para>When referencing this specification the following citation format should be used:</para>

<bibliolist>

<bibliomixed>
  <abbrev>OASIS-XDI-Core-V1.0</abbrev>
  <title>OASIS XDI Core V1.0</title>
  <date>&pubdate;. </date>
  <releaseinfo>OASIS &standard;. </releaseinfo>
  <citetitle><ulink url="&latest-loc;/&name;.html">&latest-loc;/&name;.html</ulink>.</citetitle>
</bibliomixed>

</bibliolist>

</legalnotice>
<legalnotice role="notices"><title>Notices</title>
<para>Copyright &#169; OASIS&#174; Open 2013. All Rights Reserved. 
</para>
<para>All capitalized terms in the following text have the meanings assigned to them in the OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full Policy may be found at <ulink  url="http://www.oasis-open.org/who/intellectualproperty.php">http://www.oasis-open.org/who/intellectualproperty.php</ulink>.</para>
<para>This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to OASIS, except as needed for the purpose of developing any document or deliverable produced by an OASIS Technical Committee (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy, must be followed) or as required to translate it into languages other than English.</para> 
<para>The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.</para>
<para>This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para> 
<para>OASIS requests that any OASIS Party or any other party that believes it has patent claims that would necessarily be infringed by implementations of this OASIS Committee Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>
<para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim of ownership of any patent claims that would necessarily be infringed by implementations of this specification by a patent holder that is not willing to provide a license to such patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that produced this specification. OASIS may include such claims on its website, but disclaims any obligation to do so.</para>
<para>OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS' procedures with respect to rights in any document or deliverable produced by an OASIS Technical Committee can be found on the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this OASIS Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator. OASIS makes no representation that any information or list of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential Claims.</para>
<para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>, the owner and developer of this specification, and should be used only to refer to the organization and its official outputs. OASIS welcomes reference to, and implementation and use of, specifications, while reserving the right to enforce its marks against misleading uses. Please see <ulink url="http://www.oasis-open.org/who/trademark.php">http://www.oasis-open.org/who/trademark.php</ulink> for above guidance.</para>
</legalnotice>
</articleinfo>


<section><title>About</title><para>About</para></section>

<section id="s.introduction">
<title>Introduction</title>

<para>
This working draft specifies the abstract pattern for all XDI core together with the binding to the http/https protocol for performing XDI operations using XDI messages..</para>

<para>
This working draft builds on <xref linkend="xdi-core-1.0"/>.</para>

<section>
  <title>Terminology</title>
  <section>
    <title> Key words</title>
    <para>The key words <glossterm>must</glossterm>, <glossterm>must
      not</glossterm>, <glossterm>required</glossterm>,
      <glossterm>shall</glossterm>, <glossterm>shall not</glossterm>,
      <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
      <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and
      <glossterm>optional</glossterm> are to be
      interpreted as described in <xref linkend="rfc2119"/>. Note that for
      reasons of style, these words are not capitalized in this
      document.</para>
  </section>
</section>

<section>
  
  <title>Normative References</title>
  <bibliolist>
    <bibliomixed id="xdi-core-1.0">
      <abbrev>xdi-core-1.0</abbrev>
      OASIS Committee Working Draft 01
      <title><ulink url="../xdi-core-1.0/xdi-core-1.0-wd01.xml">XDI 1.0 Core Specification</ulink></title>,
      OASIS &pubdate;, 
    </bibliomixed>
    <bibliomixed id="rfc2119">
      <abbrev>RFC 2119</abbrev>
      <title>Key words for use in RFCs to Indicate Requirement Levels</title>, 
      <date>March 1997. </date>
      <author><firstname>S. </firstname><surname>Bradner</surname></author>.
      <releaseinfo>IETF (Internet Engineering Task Force) RFC 2119, </releaseinfo>
      <citetitle><ulink url="http://www.ietf.org/rfc/rfc2119.txt">http://www.ietf.org/rfc/rfc2119.txt</ulink></citetitle>
    </bibliomixed>
    <bibliomixed id="rfc2234">
      <abbrev>RFC 2234</abbrev>
      <title>Augmented BNF for Syntax Specifications: ABNF</title>, 
      <date>November 1997. </date>
      <author><firstname>D. </firstname><surname>Crocker</surname></author>.
      <author><firstname>P. </firstname><surname>Overell</surname></author>.
      <releaseinfo>IETF (Internet Engineering Task Force) RFC 2234, </releaseinfo>
      <citetitle><ulink url="http://www.ietf.org/rfc/rfc2234.txt">http://www.ietf.org/rfc/rfc2234.txt</ulink></citetitle>
    </bibliomixed>
  </bibliolist>
</section>


http://www.ietf.org/rfc/rfc2234.txt

<section>
  
  <title>Non-Normative References</title>
  <bibliolist>
    <bibliomixed id="json-ld">
      <abbrev>json-ld</abbrev>
      W3C Editor's Draft 20 August 2013,
      <title><ulink url="http://json-ld.org/spec/latest/json-ld">JSON-LD: A JSON-based Serialization for Linked Data</ulink></title>
      , W3C 20 August 2013 
    </bibliomixed>
  </bibliolist>
</section>

</section>
  <section><title>DesignGoals</title><para>Design Goals</para>
    <section><title>UniversalAddressability</title><para>Universal Addressability</para></section>
    <section><title>PeerAuthority</title><para>Peer Authority</para></section>
    <section><title>ContextualIdentification</title><para>Contextual Identification</para></section>
    <section><title>PersistentIdentification</title><para>Persistent Identification</para></section>
    <section><title>SerializationIndependence</title><para>Serialization Independence</para></section>
    <section><title>Portability</title><para>Portability</para></section>
    <section><title>AuthorizationandPolicyExpression</title><para>Authorization and Policy Expression</para></section>
    <section><title>SchemaandOntologyExpression</title><para>Schema and Ontology Expression</para></section>
    <section><title>Extensibility</title><para>Extensibility</para></section>
  </section>
  <section><title>TheXDIGraphModel</title><para>The XDI Graph Model</para>
    <section><title>Overview</title><para>Overview</para></section>
    <section><title>NodeTypes</title><para>Node Types</para>
      <section><title>LiteralNodes</title><para>Literal Nodes</para></section>
      <section><title>ContextNodes</title><para>Context Nodes</para></section>
    </section>
    <section><title>ArcTypes</title><para>Arc Types</para>
      <section><title>LiteralArcs</title><para>Literal Arcs</para></section>
      <section><title>ContextualArcs</title><para>Contextual Arcs</para></section>
      <section><title>RelationalArcs</title><para>Relational Arcs</para></section>
    </section>
  </section>
    <section><title>ContextNodes-1</title><para>Context Nodes</para>
      <section><title>Root</title><para>Root</para>
      <section><title>Outer</title><para>Outer</para></section>
      <section><title>Peer</title><para>Peer</para></section>
      <section><title>Inner</title><para>Inner</para></section>
      <section><title>Statement</title><para>Statement</para></section>
    </section>
    <section><title>Collection</title><para>Collection</para>
       <section><title>Entity</title><para>Entity</para></section>
       <section><title>Attribute</title><para>Attribute</para></section>
    </section>
    <section><title>Member</title><para>Member</para>
      <section><title>Entity-1</title><para>Entity</para></section>
      <section><title>Attribute-1</title><para>Attribute</para></section>
    </section>
    <section><title>Singleton</title><para>Singleton</para>
      <section><title>Entity-2</title><para>Entity</para></section>
      <section><title>Attribute-2</title><para>Attribute</para></section>
    </section>
    <section><title>Definition</title><para>Definition</para>
      <section><title>Entity-3</title><para>Entity</para></section>
      <section><title>Attribute-3</title><para>Attribute</para></section>
    </section>
    <section><title>Variable</title><para>Variable</para></section>
    <section><title>Value</title><para>Value</para></section>
  </section>
  <section><title>ContextSymbols</title><para>Context Symbols</para>
    <section><title>Authorities</title><para>Authorities</para>
      <section><title>Personal (=)</title><para>Personal (=)</para></section>
      <section><title>Legal (@)</title><para>Legal (@)</para></section>
      <section><title>General (*)</title><para>General (*)</para></section>
    </section>
    <section><title>Classes</title><para>Classes</para>
      <section><title>Reserved ($)</title><para>Reserved ($)</para></section>
      <section><title>Unreserved (+)</title><para>Unreserved (+)</para></section>
    </section>
    <section><title>Instances</title><para>Instances</para>
      <section><title>Ordered (#)</title><para>Ordered (#)</para></section>
      <section><title>Unordered (!)</title><para>Unordered (!)</para></section>
    </section>
  </section>
  <section><title>ContextFunctions</title><para>Context Functions</para>
    <section><title>Simple</title><para>Simple</para>
      <section><title>Collections [ ]</title><para>Collections [ ]</para></section>
      <section><title>Attributes &lt; &gt;</title><para>Attributes &lt; &gt;</para></section>
    </section>
    <section><title>Complex</title><para>Complex</para>
      <section><title>Roots ()</title><para>Roots ( )</para></section>
      <section><title>Variables { }</title><para>Variables { }</para></section>
    </section>
  </section>
  <section><title>EquivalenceRelations</title><para>Equivalence Relations</para>
    <section><title>IdentityRelations ($is)</title><para>Identity Relations ($is)</para></section>
    <section><title>ReferenceRelations ($ref)</title><para>Reference Relations ($ref)</para></section>
    <section><title>ReplacementRelations ($rep)</title><para>Replacement Relations ($rep)</para></section>
  </section>
  <section><title>Formal Grammar</title>
    <para>This is given in Augmented Backus-Naur Form as defined in <citation>rfc2234</citation></para>


    <section><title>Statement Grammar</title>
<programlisting>
statement-list          = STARTLIST statement *( STMTSEP statement) ENDLIST
statement               = STARTSTMT (contextual-statement / relational-statement / literal-statement) ENDSTMT
contextual-statement    = direct-contextual / inverse-contextual
direct-contextual       = absolute         / root-relative / context-relative / class-relative
inverse-contextual      = absolute-inverse / root-inverse  / context-inverse  / class-inverse
absolute                =        outer-root SPSEP       outer-root POSEP context-list
root-relative           =     relative-root SPSEP       outer-root POSEP context-list
context-relative        =      context-path SPSEP       outer-root POSEP relative-context-list
class-relative          =     class-context SPSEP       outer-root POSEP instance-context-list
absolute-inverse        =      context-path SPSEP "$is" outer-root POSEP outer-root
root-inverse            =      context-path SPSEP "$is" outer-root POSEP relative-root
context-inverse         =  relative-context SPSEP "$is" outer-root POSEP contextlist
class-inverse           =  instance-context SPSEP "$is" outer-root POSEP class-contexts
relational-statement    = inverse-relational / direct-relational
direct-relational       =      context-path SPSEP       context-path POSEP ( context-path / outer-root / context-list)
inverse-relational      =      context-path SPSEP "$is" context-path POSEP ( context-path / outer-root / context-list)
literal-statement       = literal-context "&amp;" SPSEP "&amp;" POSEP json-value
</programlisting>
    </section>

    <section><title>Path List Grammar</title>
<programlisting>
;context-list           = context-path            ; for single-line display format only - make alternative?
context-list            = DOWNLEVEL 1*(CTXTSEP context-path )    UPLEVEL
relative-contexts       = DOWNLEVEL 1*(CTXTSEP relative-context) UPLEVEL
class-contexts          = DOWNLEVEL 1*(CTXTSEP class-context)    UPLEVEL
instance-contexts       = DOWNLEVEL 1*(CTXTSEP instance-context) UPLEVEL
</programlisting>
    </section>
    <section><title>Path Grammar</title>
[[GraphModelRules]] constrain paths to this form:
<programlisting>
path = *root   *( entity-singleton / attribute-singleton / ( entity-class *entity-instance ) / ( attribute-class *attribute-instance ) )   [ ( attribute-singleton / ( attribute-class 1*attribute-instance ) ) value ]
</programlisting>
<programlisting>

context-path            = outer-root / ( 1*relative-root [ relative-context ] ) / relative-context ; ND equivalent to *relative-root *subpath minus the empty case
relative-context        = 1*subpath
class-context           = [ 1*relative-root ] class-path                                           ; ND *relative-root *subpath class
class-path              = ( subpath class-path ) / class
instance-context        = 1*instance [ relative-context ]                                          ; ND 1*instance *subpath
literal-context         = [ 1*relative-root ] literal-path
literal-path            = ( subpath literal-path ) / attribute-singleton / attribute-path         ; ND *subpath ( attribute-singleton / attribute-path )
attribute-path          = attribute-class 1*instance
subpath                 = singleton / ( class [ 1*instance ] ) / definition / variable
</programlisting>
    </section>

    <section><title>Root Grammar</title>
<programlisting>
root                    = outer-root / relative-root        ;unused "(" [ identifier / iri / ( context-path [ "/" context-path [ "/" context-path ] ] ) ] ")"
outer-root              = "()"
relative-root           = peer-root / inner-root / statement-root
peer-root               = xref
inner-root              = "(" context-path SPSEP context-path ")"
statement-root          = "(" statement ")"                                                 

xref                    = "(" ( context-path / presumed-iri / xdi-identifier ) ")"  
</programlisting>
    </section>

    <section><title>Arc Grammar</title>
<programlisting>
singleton               = entity-singleton / attribute-singleton
entity-singleton        = authority-singleton / type-singleton / instance-singleton
authority-singleton     = person-singleton / group-singleton
type-singleton          = unreserved-type / reserved-type
person-singleton        = "=" SYMSEP ( xref / xdi-identifier )
group-singleton         = "@" SYMSEP ( xref / xdi-identifier )
instance-singleton      = "*" SYMSEP ( xref / xscheme / xdi-identifier )
unreserved-type         = "+" SYMSEP ( xref / xscheme / xdi-identifier )
reserved-type           = "$" SYMSEP xdi-identifier
attribute-singleton     = "&lt;" SYMSEP type-singleton "&gt;"   ;need to remove > for parsed format

class                   = meta-class / concrete-class
meta-class              = reserved-meta-class / unreserved-meta-class
reserved-meta-class     = "[$]"
unreserved-meta-class   = "[+]"
concrete-class          = entity-class    / attribute-class
entity-class            = authority-class / type-class / instance-class
authority-class         = person-class    / group-class
type-class              = reserved-class  / unreserved-class
instance-class          = ordered-class   / unordered-class / singleton-class
reserved-class          = "[" SYMSEP   reserved-type "]"
unreserved-class        = "[" SYMSEP unreserved-type "]"
person-class            = "[=]" SYMSEP ; need to remove ] if we make it two levels
group-class             = "[@]" SYMSEP 
ordered-class           = "[#]" SYMSEP 
unordered-class         = "[!]" SYMSEP 
singleton-class         = "[*]" SYMSEP 
attribute-class         = "[" attribute-singleton "]"

instance                = ordered-instance / unordered-instance
ordered-instance        = "#" SYMSEP ( ( %x31-39 DIGIT ) / "0" )                         ; No leading zeros
unordered-instance      = "!" SYMSEP ( xref / xscheme / xdi-identifier )

definition              = authority-definition / type-definition
authority-definition    = "$(" SYMSEP ( authority-singleton / authority-path ) ")"
authority-path          = authority-class 1*instance
type-definition         = entity-definition / attribute-definition
entity-definition       = "$(" SYMSEP type-singleton ")"
attribute-definition    = "$(" SYMSEP attribute-singleton ")"

variable                = "{" [ context-path ] "}"                                ; ISSUE #3 - this needs a full definition
</programlisting>
    </section>

    <section><title>Display Format Statement Serialization Grammar</title>
      <para>For XdiDisplayFormat</para>
<programlisting>
STARTLIST = ""
ENDLIST   = ""
STARTSTMT = ""
ENDSTMT   = ""
STMTSEP   = ENDLINE
SPSEP     = "/"
POSEP     = "/"
CTXTSEP   = ENDLINE %x09
SYMSEP    = ""
DOWNLEVEL = ""     ; if need cumulative indentation but impossible in ABNF, use tokens INDENT,
UPLEVEL   = ""     ; DEDENT of http://docs.python.org/2/reference/lexical_analysis.html#indentation
</programlisting>
    </section>

    <section><title>Flat JSON Statement Serialization Grammar</title>
      <para>For XdiFlatSerialization</para>
<programlisting>
STARTLIST = "{" 
ENDLIST   = "}"
STARTSTMT =       "{" QUOTE
ENDSTMT   = QUOTE "}"
STMTSEP   = QUOTE "," QUOTE
SPSEP     = "/"
POSEP     = QUOTE ":" QUOTE
CTXTSEP   = ","
SYMSEP    = ""
DOWNLEVEL = "["
UPLEVEL   = "]"
</programlisting>
    </section>

    <section><title>Parsed JSON Statement Serialization Grammar</title>
      <para>For XdiParseSerialization</para>
<programlisting>
STARTLIST = "["
ENDLIST   = "]"
STARTSTMT =       "[" QUOTE
ENDSTMT   = QUOTE "]"
STMTSEP   = QUOTE "," QUOTE
SPSEP     = QUOTE "," QUOTE
POSEP     = QUOTE "," QUOTE
CTXTSEP   = ","
SYMSEP    = QUOTE "," QUOTE
DOWNLEVEL = "["
UPLEVEL   = "]"
</programlisting>
    </section>

    <section><title>Graph Tree Serialization Grammar</title>
      <para>For XdiTreeSerialization</para>
<programlisting>
node            = context-node / literal-node
context-node    = "{" node *( "," node ) "}"
literal-node    = "{" QUOTE "&amp;" QUOTE ":" json-value "}"
arc             = contextual-arc / relational-arcs
contextual-arc  = QUOTE singleton QUOTE ":" context-node
relational-arcs = "{" QUOTE "/" QUOTE ":" relation *( "," relation ) "}"
relation        = "{" QUOTE pred QUOTE ":" "[" path *( "," path ) "]" "}"
</programlisting>
    </section>

    <section><title>JSON Grammar</title>
      <para>Based on [[http://json.org]] syntax diagrams (no actual grammar rules found there) restricted for canonical form (add reference) canonicality restrictions: no + signs, no leading zeros, no trailing zeros on fraction</para>
<programlisting>
json-value       = json-object / json-array / json-string / json-number / "true" / "false" / "null"
json-object      = "{" [ json-string ":" json-value *( "," json-string ":" json-value ) ] "}"
json-array       = "[" [                 json-value *( ","                 json-value ) ] "]"
json-string      = QUOTE *( " " / "!" / %x23-5B  / %x5D-EFFFD / json-char-escape )    QUOTE
json-char-escape = "\"    ("\" / "/" / "b" / "f" / "n" / "r" / "t" / QUOTE / ( "u" 4HEX ) )
json-number      = ( "0" / [ "-" ] noleading ) [ "." notrailing ] [ "E" [ "-" ] noleading ]   ; ban +, use sign only if -, no length restriction
noleading        = %x31-39 *DIGIT                                     ; ban leading zero for canonicality
notrailing       = *DIGIT  %x31-39                                    ; ban trailing zero for canonicality
</programlisting>
    </section>

    <section><title>Identifier Grammar</title>
<programlisting>

xscheme             = ":" ( xscheme-ipv6 / xscheme-uuid )
xscheme-ipv6        = "ipv6:" 4HEX 7*( ":" 4HEX )                       ; ISSUE - needs revision into canonical form per RFC 5952
xscheme-uuid        = "uuid:" 8HEX "-" 4HEX "-" 4HEX "-" 4HEX "-" 12HEX
HEX                 = DIGIT / %x61-66   ; 0-9, a-f                      ; Hex in ipv6, uuid is lowercase. Only E in JSON numbers uppercase.

presumed-iri        = %x61-7A *( %x61-7A / DIGIT ) ":" *iri-body        ; Quick check for something that looks like an IRI without checking body details 
iri-body            = ( "(" iri-body ")" ) / *iri-char                  ; paired "(" and ")" are allowed in body
iri-char            = xdi-identifier-char / context-symbol / other-iri-delim
other-iri-delim     = "/" / "?" / "#" / "[" / "]" / "'" / ","           ; double quote included? no
context-symbol      = "!" / "*" / "=" / "@" / "+" / "$"

xdi-identifier      = *xdi-identifier-char    ; Note: Includes any JSON numbers
xdi-identifier-char = %x41-5A / %x61-7A / DIGIT / "-" / "." / "_" / %x80-EFFFD      ; ISSUE - is there a way to leave high end open?

DIGIT               = %x30-39
NZDIG               = %x31-39
QUOTE               = %x22
ENDLINE             = %x0D / %x0A / ( %x0D %x0A )
</programlisting>
    </section>



  </section>
  <section><title>Serialization</title><para>Serialization</para>
    <section><title>Formats</title><para>Formats</para></section>
    <section><title>Rules</title><para>Rules</para></section>
  </section>
  <section><title>AddressingRules</title><para>Addressing Rules</para>
  </section>
  <section><title>XDISchemes</title><para>XDI Schemes</para>
    <section><title>UUID</title><para>UUID</para></section>
    <section><title>IPV6</title><para>IPV6</para></section>
    <section><title>SHA</title><para>SHA</para></section>
    <section><title>Extensibility-1</title><para>Extensibility</para></section>
  </section>

<appendix id="s.acknowledgements" role="non-normative">
  <title>Acknowledgements</title>

  <para>This specification was written with the generous and appreciated assistance of</para>
</appendix>
  
<appendix id="a.dollarwords" role="non-normative">
  <title>Dollar Words</title>
  
  <para>This appendix contains formal definitions of the XDI dollar words introduced by this specification.</para>
</appendix>
  
<appendix id="a.examples" role="non-normative">
  <title>Examples</title>
  
  <para>This appendix contains XDI core examples.</para>
</appendix>

</article>
